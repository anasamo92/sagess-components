[
    {
        "name": "bar",
        "version": "1.0.0",
        "description": "bar component containing different components which can be updated dynamically. SummaryComponent, BarLeft,BarRight.",
        "keywords": [
            "summary",
            "bar",
            "header",
            "barContentLeft",
            "barContentRight."
        ],
        "code": "\r\nconst Bar = FocusComponents.application.bar.component;\r\nconst dispatcher = Focus.dispatcher;\r\nconst Cartridge = React.createClass({\r\n    render(){\r\n        return <div>CARTOUCHE</div>;\r\n    }\r\n});\r\nconst Summary = React.createClass({\r\n    render(){\r\n        return <div>SUMMARY</div>;\r\n    }\r\n});\r\nconst BarContentRight = React.createClass({\r\n    render(){\r\n        return <div>BAR RIGHT</div>;\r\n    }\r\n});\r\nconst BarContentLeft = React.createClass({\r\n    render(){\r\n        return <div>BAR LEFT</div>;\r\n    }\r\n});\r\n//Simple function to update components in the bar.\r\nfunction updateComponents(cartridgeConf){\r\n    const {cartridge: cartridgeComponent, summary: summaryComponent, actions: actions, barLeft: barContentLeftComponent, barRight: barContentRightComponent} = cartridgeConf;\r\n    dispatcher.handleViewAction({\r\n      data: {\r\n        cartridgeComponent,\r\n        summaryComponent,\r\n        actions,\r\n        barContentLeftComponent,\r\n        barContentRightComponent\r\n      },\r\n      type: 'update'\r\n    });\r\n}\r\n//Add a defer in order to inject the props after the component is mounted\r\n_.defer(()=>{\r\n    updateComponents({\r\n      cartridge: {component: Cartridge, props:{}},\r\n      summary:{component: Summary, props:{}},\r\n      actions: {\r\n          primary: [],\r\n          secondary: []\r\n      },\r\n      barLeft: {component: BarContentLeft, props:{}},\r\n      barRight: {component: BarContentRight, props:{}}\r\n    })\r\n});\r\n\r\n\r\nconst BarExample =  React.createClass({\r\n    render(){\r\n        return (\r\n            <header>\r\n                <Bar/>\r\n            </header>\r\n        );\r\n    }\r\n});\r\n\r\nreturn <BarExample/>;\r\n"
    },
    {
        "name": "cartridge",
        "version": "1.0.0",
        "description": "Cartrige which is the content of the header when the component is expanded.",
        "keywords": [
            "header",
            "expanded",
            "cartridge"
        ],
        "code": "\r\nconst Cartridge = FocusComponents.application.cartridge.component;\r\nconst dispatcher = Focus.dispatcher;\r\nconst CartridgeContent = React.createClass({\r\n    render(){\r\n        return <div>CARTOUCHE</div>;\r\n    }\r\n});\r\nconst Summary = React.createClass({\r\n    render(){\r\n        return <div>SUMMARY</div>;\r\n    }\r\n});\r\nconst BarContentRight = React.createClass({\r\n    render(){\r\n        return <div>BAR RIGHT</div>;\r\n    }\r\n});\r\nconst BarContentLeft = React.createClass({\r\n    render(){\r\n        return <div>BAR LEFT</div>;\r\n    }\r\n});\r\n//Simple function to update components in the bar.\r\nfunction updateComponents(cartridgeConf){\r\n    const {cartridge: cartridgeComponent, summary: summaryComponent, actions: actions, barLeft: barContentLeftComponent, barRight: barContentRightComponent} = cartridgeConf;\r\n    dispatcher.handleViewAction({\r\n      data: {\r\n        cartridgeComponent,\r\n        summaryComponent,\r\n        actions,\r\n        barContentLeftComponent,\r\n        barContentRightComponent\r\n      },\r\n      type: 'update'\r\n    });\r\n}\r\n//Add a defer in order to inject the props after the component is mounted\r\n_.defer(()=>{\r\n    updateComponents({\r\n      cartridge: {component: CartridgeContent, props:{}},\r\n      summary:{component: Summary, props:{}},\r\n      actions: {\r\n          primary: [],\r\n          secondary: []\r\n      },\r\n      barLeft: {component: BarContentLeft, props:{}},\r\n      barRight: {component: BarContentRight, props:{}}\r\n    })\r\n});\r\n\r\nconst CartridgeExample =  React.createClass({\r\n    render(){\r\n        return (\r\n            <header>\r\n                <Cartridge/>\r\n            </header>\r\n        );\r\n    }\r\n});\r\n\r\nreturn <CartridgeExample/>;\r\n"
    },
    {
        "name": "content-bar",
        "version": "1.0.0",
        "description": "Content bar wrapper for the application header.",
        "keywords": [
            "header",
            "wrapper"
        ],
        "code": "const ContentBar = FocusComponents.application.contentBar.component;\r\nconst ContentBarExample =  React.createClass({\r\n    render(){\r\n        return (\r\n            <ContentBar>\r\n                <img src=\"http://lorempixel.com/400/200\" />\r\n                <img src=\"http://lorempixel.com/400/200\" />\r\n                <img src=\"http://lorempixel.com/400/200\" />\r\n                <img src=\"http://lorempixel.com/400/200\" />\r\n                <img src=\"http://lorempixel.com/400/200\" />\r\n                <img src=\"http://lorempixel.com/400/200\" />\r\n            </ContentBar>\r\n        );\r\n    }\r\n});\r\n\r\nreturn <ContentBarExample/>;\r\n"
    },
    {
        "name": "header",
        "version": "1.0.0",
        "description": "Header component listening to the scroll and dynamically changes the size with custom attributes.",
        "keywords": [
            "header",
            "resize",
            "scroll",
            "layout",
            "app"
        ],
        "code": "\r\nconst Header = FocusComponents.application.header.component;\r\nconst HeaderExample =  React.createClass({\r\n    render(){\r\n        return (\r\n            <div>\r\n                <Header>\r\n                    <div className=\"mdl-layout__header-row\">\r\n                    <span className=\"mdl-layout-title\">Title</span>\r\n                    <div className=\"mdl-layout-spacer\"></div>\r\n                        <nav className=\"mdl-navigation\">\r\n                            <a className=\"mdl-navigation__link\" href=\"\">Link</a>\r\n                            <a className=\"mdl-navigation__link\" href=\"\">Link</a>\r\n                            <a className=\"mdl-navigation__link\" href=\"\">Link</a>\r\n                            <a className=\"mdl-navigation__link\" href=\"\">Link</a>\r\n                        </nav>\r\n                    </div>\r\n                </Header>\r\n                <img src=\"http://lorempixel.com/400/200\" />\r\n                <img src=\"http://lorempixel.com/400/200\" />\r\n                <img src=\"http://lorempixel.com/400/200\" />\r\n                <img src=\"http://lorempixel.com/400/200\" />\r\n                <img src=\"http://lorempixel.com/400/200\" />\r\n                <img src=\"http://lorempixel.com/400/200\" />\r\n            </div>\r\n        );\r\n    }\r\n});\r\n\r\nreturn <HeaderExample/>;\r\n"
    },
    {
        "name": "old-layout",
        "version": "1.0.0",
        "description": "Layout of the focus application",
        "keywords": [
            "layout",
            "dumb"
        ],
        "code": "const {dispatcher} = Focus;\r\nconst CartridgeContent = React.createClass({\r\n    render(){\r\n        return <div>CARTOUCHE</div>;\r\n    }\r\n});\r\nconst Summary = React.createClass({\r\n    render(){\r\n        return <div>SUMMARY</div>;\r\n    }\r\n});\r\nconst BarContentRight = React.createClass({\r\n    render(){\r\n        return <div>BAR RIGHT</div>;\r\n    }\r\n});\r\nconst BarContentLeft = React.createClass({\r\n    render(){\r\n        return <div>BAR LEFT</div>;\r\n    }\r\n});\r\nconst MENU = React.createClass({\r\n    render(){\r\n        return <nav>MENU</nav>;\r\n    }\r\n});\r\n//Simple function to update components in the bar.\r\nfunction updateComponents(cartridgeConf){\r\n    const {cartridge: cartridgeComponent, summary: summaryComponent, actions: actions, barLeft: barContentLeftComponent, barRight: barContentRightComponent} = cartridgeConf;\r\n    dispatcher.handleViewAction({\r\n      data: {\r\n        cartridgeComponent,\r\n        summaryComponent,\r\n        actions,\r\n        barContentLeftComponent,\r\n        barContentRightComponent\r\n      },\r\n      type: 'update'\r\n    });\r\n}\r\n//Add a defer in order to inject the props after the component is mounted\r\n_.defer(()=>{\r\n    updateComponents({\r\n      cartridge: {component: CartridgeContent, props:{}},\r\n      summary:{component: Summary, props:{}},\r\n      actions: {\r\n          primary: [],\r\n          secondary: []\r\n      },\r\n      barLeft: {component: BarContentLeft, props:{}},\r\n      barRight: {component: BarContentRight, props:{}}\r\n    })\r\n});\r\n\r\n\r\nconst Layout = FocusComponents.application.layout.component;\r\nconst LayoutExample =  React.createClass({\r\n    render(){\r\n        return (\r\n            <Layout MenuLeft={MENU}>Test</Layout>\r\n        );\r\n    }\r\n});\r\n\r\nreturn <LayoutExample/>;\r\n"
    },
    {
        "name": "autocomplete",
        "version": "1.0.0",
        "description": "Autocomplete component",
        "keywords": [
            "input",
            "dumb"
        ],
        "code": "const AutocompleteFor = FocusComponents.common.autocomplete.field.component;\r\n\r\nconst listLoader = text => {\r\n    return new Promise(resolve => {\r\n        setTimeout(() => {\r\n            resolve([\r\n                {\r\n                    code: 'RIRI',\r\n                    value: 'Riri'\r\n                },\r\n                {\r\n                    code: 'FIFI',\r\n                    value: 'Fifi'\r\n                },\r\n                {\r\n                    code: 'LOULOU',\r\n                    value: 'Loulou'\r\n                }\r\n            ]);\r\n        }, 500);\r\n    });\r\n};\r\n\r\nclass AutocompleteSample extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <AutocompleteFor\r\n                    isEdit={true}\r\n                    loader={listLoader}\r\n                />\r\n                <AutocompleteFor\r\n                    isEdit={true}\r\n                    loader={listLoader}\r\n                    value='RIRI'\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nreturn <AutocompleteSample />;\r\n"
    },
    {
        "name": "block",
        "version": "0.0.0",
        "description": "Block component",
        "keywords": [
            "block",
            "detail",
            "model",
            "title"
        ],
        "code": "const Block = FocusComponents.common.block.component;\r\nconst formMixin = FocusComponents.common.form.mixin;\r\n\r\nconst domain =  {\r\n    \"DO_TEXT\": {\r\n        style: \"do_text\",\r\n        type: \"text\",\r\n        component: \"PapaSinge\",\r\n        validation: [{\r\n            type: \"function\",\r\n            value: function() {\r\n                return false;\r\n            }\r\n        }]\r\n    }\r\n};\r\n\r\nFocus.definition.domain.container.setAll(domain);\r\nconst entities = {\r\n    \"contact\": {\r\n        \"firstName\": {\r\n            \"domain\": \"DO_TEXT\",\r\n            \"required\": false\r\n        }\r\n    }\r\n};\r\nFocus.definition.entity.container.setEntityConfiguration(entities);\r\n\r\nconst BlockSample1 = React.createClass({\r\n    definitionPath: 'contact',\r\n    mixins: [formMixin],\r\n    hasLoad: false,\r\n    /**\r\n    * Render the component.\r\n    * @return {object} React node\r\n    */\r\n    renderContent() {\r\n        return (\r\n            <div>\r\n                <h3>Block without actions</h3>\r\n                <Block title=\"Here is the title\">\r\n                    <br/>\r\n                    <br/>\r\n                    <p>Here is the content.</p>\r\n                    <br/>\r\n                    <br/>\r\n                </Block>\r\n            </div>\r\n        );\r\n    }\r\n});\r\n\r\nconst BlockSample2 = React.createClass({\r\n    definitionPath: 'contact',\r\n    mixins: [formMixin],\r\n    hasLoad: false,\r\n    /**\r\n    * Render the component.\r\n    * @return {object} React node\r\n    */\r\n    renderContent() {\r\n        return (\r\n            <div>\r\n                <h3>Block with actions (default)</h3>\r\n                <Block title=\"Here is the title\" actions={this._renderActions}>\r\n                    <br/>\r\n                    <br/>\r\n                    <p>Here is the content.</p>\r\n                    <br/>\r\n                    <br/>\r\n                </Block>\r\n            </div>\r\n        );\r\n    }\r\n});\r\n\r\nconst BlockSample3 = React.createClass({\r\n    definitionPath: 'contact',\r\n    mixins: [formMixin],\r\n    hasLoad: false,\r\n    /**\r\n    * Render the component.\r\n    * @return {object} React node\r\n    */\r\n    renderContent() {\r\n        return (\r\n            <div>\r\n                <h3>Block with actions (bottom)</h3>\r\n                <Block title=\"Here is the title\" actions={this._renderActions} actionsPosition=\"bottom\">\r\n                    <br/>\r\n                    <br/>\r\n                    <p>Here is the content.</p>\r\n                    <br/>\r\n                    <br/>\r\n                </Block>\r\n            </div>\r\n        );\r\n    }\r\n});\r\n\r\nconst BlockSample4 = React.createClass({\r\n    definitionPath: 'contact',\r\n    mixins: [formMixin],\r\n    hasLoad: false,\r\n    /**\r\n    * Render the component.\r\n    * @return {object} React node\r\n    */\r\n    renderContent() {\r\n        return (\r\n            <div>\r\n                <h3>Block with actions (both)</h3>\r\n                <Block title=\"Here is the title\" actions={this._renderActions} actionsPosition=\"both\">\r\n                    <br/>\r\n                    <br/>\r\n                    <p>Here is the content.</p>\r\n                    <br/>\r\n                    <br/>\r\n                </Block>\r\n            </div>\r\n        );\r\n    }\r\n});\r\n\r\nreturn (\r\n    <div>\r\n        <BlockSample1 />\r\n        <br/>\r\n        <BlockSample2 />\r\n        <br/>\r\n        <BlockSample3 />\r\n        <br/>\r\n        <BlockSample4 />\r\n    </div>\r\n);\r\n"
    },
    {
        "name": "bouton-action",
        "version": "1.0.0",
        "description": "Bouton d'action remplace un bouton html, possibilité de changer la forme et l'action du composant.",
        "keywords": [
            "button",
            "action",
            "click",
            "shape"
        ],
        "code": "const Button = FocusComponents.common.button.action.component;\r\n\r\n/***********************************************************************************************************************/\r\n/* to test internationalisation. */\r\nvar resources = {\r\n    dev: {\r\n        translation: {\r\n            'button': {\r\n                'label': 'Button avec tradution'\r\n            }\r\n        }\r\n    }\r\n};\r\ni18n.init({resources: resources});\r\n/***********************************************************************************************************************/\r\n\r\nconst ButtonSample = React.createClass({\r\n    /**\r\n    * Render the component.\r\n    * @return {object} React node\r\n    */\r\n    render() {\r\n        return (\r\n            <div className='button-example'>\r\n            <Button label='Bouton primaire' type='button' handleOnClick={()=> alert('click bouton')}/>\r\n            <br /><br />\r\n            <Button icon='alarm' color='colored' label='Bouton primaire' shape='fab' type='button' handleOnClick={()=> alert('click bouton')}/>\r\n            <br /><br />\r\n            <Button icon='build' label='Bouton icone' type='button' handleOnClick={()=> alert('click bouton')}/>\r\n            <br /><br />\r\n            <Button icon='build' color='accent' label='Bouton accent' type='button' handleOnClick={()=> alert('click bouton')}/>\r\n            <br /><br />\r\n            <Button icon='mood' color='colored' label='iconbutton' shape='icon' type='button' handleOnClick={()=> alert('click bouton')}/>\r\n            <br /><br />\r\n            <Button icon='mood' label='minifabbutton' color='announcement' shape='mini-fab' type='button' handleOnClick={()=> alert('click bouton')}/>\r\n            <br /><br />\r\n            <Button label='button.label' type='button' handleOnClick={()=> alert('click bouton')}/>\r\n            </div>\r\n        );\r\n    }\r\n});\r\n\r\nreturn <ButtonSample/>;\r\n"
    },
    {
        "name": "back-to-top",
        "version": "1.0.0",
        "description": "Button back to top.",
        "keywords": [
            "button",
            "top",
            "scroll"
        ],
        "code": "const ButtonBackToTop = FocusComponents.common.button.backToTop.component;\r\n\r\nconst ButtonBTSample = React.createClass({\r\n    /**\r\n    * Render the component.\r\n    * @return {object} React node\r\n    */\r\n    render() {\r\n        return (\r\n            <div className='button-bt-example'>\r\n                <img src=\"http://lorempixel.com/800/600/sports/\"/>\r\n                <img src=\"http://lorempixel.com/800/600/abstract/\"/>\r\n                <img src=\"http://lorempixel.com/800/600/city/\"/>\r\n                <img src=\"http://lorempixel.com/800/600/technics/\"/>\r\n                <img src=\"http://lorempixel.com/800/600/sports/\"/>\r\n                <img src=\"http://lorempixel.com/800/600/abstract/\"/>\r\n                <img src=\"http://lorempixel.com/800/600/city/\"/>\r\n                <img src=\"http://lorempixel.com/800/600/technics/\"/>\r\n                <ButtonBackToTop />\r\n            </div>\r\n        );\r\n    }\r\n});\r\n\r\nreturn <ButtonBTSample/>;\r\n"
    },
    {
        "name": "column",
        "version": "1.0.0",
        "description": "Column component see http://www.getmdl.io/components/index.html#layout-section/grid.",
        "keywords": [
            "grid",
            "column",
            "separation",
            "detail",
            "page"
        ],
        "code": "const {column: Column, grid: Grid} = FocusComponents.common;\r\n// Blue square to  fill the grid.\r\nconst BlueSquare = React.createClass({\r\n    render(){\r\n        const label = this.props.label;\r\n        const style = {backgroundColor: '#BDBDBD', height: '200px', color: 'white'};\r\n        return <div style={style}>{label}</div>;\r\n    }\r\n});\r\n\r\n\r\nconst GridColumnSample = React.createClass({\r\n    /**\r\n    * Render the component.\r\n    * @return {object} React node\r\n    */\r\n    render() {\r\n        return (\r\n            <Grid>\r\n                <Column size='4'><BlueSquare label='size4'/></Column>\r\n                <Column size='3'><BlueSquare label='size3'/></Column>\r\n                <Column size='5'><BlueSquare label='size5'/></Column>\r\n                <Column size='4'><BlueSquare label='size4'/></Column>\r\n            </Grid>\r\n        );\r\n    }\r\n});\r\n\r\nreturn <GridColumnSample/>;\r\n"
    },
    {
        "name": "detail",
        "version": "1.0.0",
        "description": "Example of detail use",
        "keywords": [
            "detail",
            "menu",
            "nav",
            "block"
        ],
        "code": "const Detail = FocusComponents.common.detail.component;\r\nconst Block = FocusComponents.common.block.component;\r\n\r\nconst DetailSample = React.createClass({\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Detail sample</h1>\r\n                <Detail>\r\n                    <Block title=\"Sports\">\r\n                        <img alt=\"lorempixel\" src=\"http://lorempixel.com/800/600/sports\" title=\"lorempixel\" />\r\n                    </Block>\r\n\r\n                    <Block title=\"Animals\">\r\n                        <img alt=\"lorempixel\" src=\"http://lorempixel.com/800/600/animals\" title=\"lorempixel\" />\r\n                    </Block>\r\n\r\n                    <Block title=\"Business\">\r\n                        <img alt=\"lorempixel\" src=\"http://lorempixel.com/800/600/business\" title=\"lorempixel\" />\r\n                    </Block>\r\n\r\n                    <Block title=\"Cats\">\r\n                        <img alt=\"lorempixel\" src=\"http://lorempixel.com/800/600/cats\" title=\"lorempixel\" />\r\n                    </Block>\r\n\r\n                    <Block title=\"City\">\r\n                        <img alt=\"lorempixel\" src=\"http://lorempixel.com/800/600/city\" title=\"lorempixel\" />\r\n                    </Block>\r\n\r\n                    <Block title=\"Food\">\r\n                        <img alt=\"lorempixel\" src=\"http://lorempixel.com/800/600/food\" title=\"lorempixel\" />\r\n                    </Block>\r\n\r\n                    <Block title=\"Nightlife\">\r\n                        <img alt=\"lorempixel\" src=\"http://lorempixel.com/800/600/nightlife\" title=\"lorempixel\" />\r\n                    </Block>\r\n\r\n                    <Block title=\"Fashion\">\r\n                        <img alt=\"lorempixel\" src=\"http://lorempixel.com/800/600/fashion\" title=\"lorempixel\" />\r\n                    </Block>\r\n\r\n                    <Block title=\"People\">\r\n                        <img alt=\"lorempixel\" src=\"http://lorempixel.com/800/600/people\" title=\"lorempixel\" />\r\n                    </Block>\r\n\r\n                    <Block title=\"Nature\">\r\n                        <img src=\"http://lorempixel.com/800/600/nature\" title=\"lorempixel\" alt=\"lorempixel\" />\r\n                    </Block>\r\n\r\n                    <Block title=\"Technics\">\r\n                        <img src=\"http://lorempixel.com/800/600/technics\" title=\"lorempixel\" alt=\"lorempixel\" />\r\n                    </Block>\r\n\r\n                    <Block title=\"Transport\">\r\n                        <img src=\"http://lorempixel.com/800/600/transport\" title=\"lorempixel\" alt=\"lorempixel\" />\r\n                    </Block>\r\n                </Detail>\r\n            </div>\r\n        );\r\n    }\r\n});\r\n\r\nreturn <DetailSample />;\r\n"
    },
    {
        "name": "field",
        "version": "1.0.0",
        "description": "Example of field use",
        "keywords": [
            "field",
            "input",
            "form",
            "date",
            "select",
            "text",
            "checkbox",
            "radio",
            "error",
            "label"
        ],
        "code": "const Field = FocusComponents.common.field.component;\r\n\r\nconst valuesExample = [\r\n    {code: \"A\", label: \"aaaa\"},\r\n    {code: \"B\", label: \"bbbbb\"},\r\n    {code: \"C\", label: \"ccccc\"},\r\n    {code: \"D\", label: \"DDDD\"}\r\n];\r\n\r\nconst FieldSample = React.createClass({\r\n    /**\r\n    * Render the component.\r\n    * @return {object} React node\r\n    */\r\n    render() {\r\n        return (\r\n            <form>\r\n                <h3>Champ en mode consultation</h3>\r\n                <Field name='fieldConsult' value='fieldConsultValue' isEdit={false} label=\"My awsome field\" />\r\n                <Field name='fieldConsultFormatted' value='fieldConsultValue' isEdit={false} formatter={function(data){return data + \" formatter applied\";}} label=\"My awsome field formatted\" />\r\n                <h3>Champ en mode édition</h3>\r\n                <Field name='field1' value='fieldValue' isEdit={true}/>\r\n                <h3>Champ en mode édition avec domaine</h3>\r\n                <Field name='field1' value='fieldValue' isEdit={true} domain=\"DO_NOM\"/>\r\n                <h3>Champ en erreur</h3>\r\n                <Field name='field2' value='field2Value' error='error in field2' isEdit={true} />\r\n                <h3>Type number</h3>\r\n                <Field name='field3' value={3} type='number'/>\r\n                <Field name='field4' value='popop' isEdit={true} help='Here to help'/>\r\n                <h3>Select</h3>\r\n                <Field name='field5' value='A' values={valuesExample} />\r\n                <p>Ici, il devrait me rendre un select mais il ne le fait pas... Pierr ?</p>\r\n                <h3>Disable</h3>\r\n                <Field name='fieldDisabled' value='popop' isEdit={true} disabled={true}/>\r\n            </form>\r\n        );\r\n    }\r\n});\r\n\r\nreturn <FieldSample/>;\r\n"
    },
    {
        "name": "form",
        "version": "1.0.0",
        "description": "Example of Form use",
        "keywords": [
            "form",
            "input",
            "field",
            "text",
            "textarea",
            "date",
            "select",
            "radio",
            "checkbox",
            "block"
        ],
        "code": "const actionBuilder = Focus.application.actionBuilder;\r\nconst Panel = FocusComponents.components.Panel;\r\nconst formMixin = FocusComponents.common.form.mixin;\r\nconst MessageCenter = FocusComponents.application.messageCenter.component;\r\n\r\n/***********************************************************************************************************************/\r\n/* to test internationalisation. */\r\nvar resources = {\r\n    dev: {\r\n        translation: {\r\n            'button': {\r\n                'edit': 'Editer',\r\n                'save': 'Sauvegarder',\r\n                'cancel': 'Abandonner'\r\n            },\r\n            'select': {\r\n                'yes': 'Oui',\r\n                'no': 'Non',\r\n                'unSelected': '-'\r\n            },\r\n            'contact': {\r\n                'firstName': 'Prénom',\r\n                'lastName': 'Nom',\r\n                'papaCOde': 'Le code du papa',\r\n                'monkeyCode': 'Le code du singe',\r\n                'bio': 'Biography',\r\n                'isCool': 'Est-il cool ?',\r\n                'isNice': 'Est-il gentil ?',\r\n                'birthDate': 'Date de naissance',\r\n                'city': 'Lieu de naissance'\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\ni18n.init({resources: resources});\r\n\r\n/***********************************************************************************************************************/\r\n// TODO PBN : refactor loading of init domains and ref in a global way\r\n//Load dependencies.\r\nvar domain = {\r\n    'DO_TEXT': {\r\n        style: 'do_text',\r\n        type: 'text',\r\n        component: 'PapaSinge',\r\n        validator: [{\r\n            type: 'function',\r\n            options:{\r\n                translationKey: 'domain.doTEXT.test'\r\n            },\r\n            value: function (d) {\r\n                return _.isString(d);\r\n            }\r\n        }]\r\n    },\r\n    'DO_EMAIL': {\r\n        style: 'do_email',\r\n        type: 'email',\r\n        component: 'PapaMail',\r\n        validator: [{\r\n            type: 'function',\r\n            value: function () {\r\n                return true;\r\n            }\r\n        }]\r\n    },\r\n    'DO_DATE': {\r\n        'InputComponent': FocusComponents.components.input.Date,\r\n        formatter: date => date ? moment(date, moment.ISO_8601).format('D MMMM YYYY') : '',\r\n        format: ['DD/MM/YYYY', 'DD-MM-YYYY', 'D MMM YYYY'],\r\n        locale: 'fr'\r\n    },\r\n    'DO_OUI_NON': {\r\n        SelectComponent: FocusComponents.common.select.radio.component,\r\n        refContainer: {yesNoList: [{code: true, label: \"select.yes\"}, {code: false, label: \"select.no\"}]},\r\n        listName: 'yesNoList'\r\n    }\r\n};\r\nFocus.definition.domain.container.setAll(domain);\r\n/*global focus*/\r\nvar entities = {\r\n    \"contact\": {\r\n        \"firstName\": {\r\n            \"domain\": \"DO_TEXT\",\r\n            \"required\": false,\r\n            \"validator\": [{options:{translationKey: 'entityContactValidation.test'}, type:'function', value: function (data) {\r\n                return data.length <= 3 ? false : true;\r\n            }}]\r\n        },\r\n        \"lastName\": {\r\n            \"domain\": \"DO_TEXT\",\r\n            \"required\": true\r\n        },\r\n        \"papaCode\": {\r\n            \"domain\": \"DO_TEXT\",\r\n            \"required\": true\r\n        },\r\n        \"age\": {\r\n            \"domain\": \"DO_NUMBER\",\r\n            \"required\": false,\r\n            \"type\": \"number\"\r\n        },\r\n        \"email\": {\r\n            \"domain\": \"DO_EMAIL\",\r\n            \"required\": false\r\n        },\r\n        \"bio\": {\r\n            \"domain\": \"DO_EMAIL\",\r\n            \"InputComponent\": FocusComponents.common.input.textarea.component\r\n        },\r\n        \"isCool\": {\r\n            \"domain\": \"DO_OUI_NON\"\r\n        },\r\n        \"isNice\": {\r\n            \"domain\": \"DO_BOOLEAN\",\r\n            \"FieldComponent\": FocusComponents.common.input.toggle.component\r\n        },\r\n        \"birthDate\": {\r\n            \"domain\": \"DO_DATE\",\r\n            \"required\": false\r\n        },\r\n        \"city\": {\r\n            \"domain\": \"DO_TEXT\"\r\n        }\r\n    },\r\n    \"commande\": {\r\n        \"name\": {\r\n            \"domain\": \"DO_TEXT\",\r\n            \"required\": true\r\n        },\r\n        \"number\": {\r\n            \"domain\": \"DO_NUMBER\",\r\n            \"required\": false,\r\n            \"type\": \"number\"\r\n        }\r\n    }\r\n};\r\nFocus.definition.entity.container.setEntityConfiguration(entities);\r\n\r\nfunction loadRefList(name) {\r\n    return function loadRef() {\r\n        var refLst = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9].map(function (cd) {\r\n            return {\r\n                code: ''+cd,\r\n                label: ('' + cd + ' ' + name)\r\n            };\r\n        });\r\n        return Promise.resolve(refLst);\r\n    };\r\n}\r\nfunction loadMonkeyList(){\r\n    return loadRefList('monkey')().then(function(data){\r\n        return data.map(function(element){\r\n            return {myCustomCode: element.code, myCustomLabel: element.label};\r\n        });\r\n    });\r\n}\r\n\r\n\r\nFocus.reference.config.set({papas: loadRefList('papas'), singe: loadRefList('singe'), monkeys: loadMonkeyList});\r\nFocus.definition.entity.container.setEntityConfiguration(entities);\r\n/***********************************************************************************************************************/\r\n\r\nconst ListLine = React.createClass({\r\n    mixins: [FocusComponents.list.selection.line.mixin],\r\n    definitionPath: \"commande\",\r\n    renderLineContent(data){\r\n        const firstName = this.displayFor(\"name\", {});\r\n        const lastName = this.displayFor(\"number\", {});\r\n        return <div>{firstName} {lastName}</div>;\r\n        }\r\n    });\r\n\r\n    const contactStore = new Focus.store.CoreStore({\r\n        definition: {\r\n            'contact': 'contact',\r\n            'commandes': 'commande'\r\n        }\r\n    });\r\n\r\n    const jsonContact= {\r\n        firstName: \"Zeus\",\r\n        lastName: \"God\",\r\n        isCool: true,\r\n        birthDate: null,\r\n        commandes: [{\r\n            name: \"commande1\",\r\n            number: \"1\"\r\n        }, {\r\n            name: \"commande2\",\r\n            number: \"2\"\r\n        }, {\r\n            name: \"commande3\",\r\n            number: \"3\"\r\n        }, {\r\n            name: \"commande4\",\r\n            number: \"4\"\r\n        }, {\r\n            name: \"commande5\",\r\n            number: \"5\"\r\n        }, {\r\n            name: \"commande6\",\r\n            number: \"6\"\r\n        }],\r\n        city: 'PAR'\r\n    };\r\n\r\n    const action = {\r\n        load: actionBuilder({\r\n            status: 'loaded',\r\n            node: 'contact',\r\n            service(){\r\n                return new Promise(function(s,e){\r\n                    _.delay(function(){\r\n                        s(jsonContact);\r\n                    }, 1);\r\n                })//Promise.resolve(jsonContact);\r\n            }\r\n        }),\r\n        save:actionBuilder({\r\n            status: 'saved',\r\n            preStatus: 'saving',\r\n            node: 'contact',\r\n            service(data){\r\n                console.log('save', data);\r\n                return Promise.resolve(data);\r\n            }\r\n        })\r\n    };\r\n\r\n    const autocompleteData = [\r\n        {\r\n            code: 'PAR',\r\n            value: 'Paris'\r\n        },\r\n        {\r\n            code: 'LON',\r\n            value: 'Londres'\r\n        },\r\n        {\r\n            code: 'NY',\r\n            value: 'New york'\r\n        }\r\n    ];\r\n\r\n    const codeResolver = code =>  {\r\n        return new Promise(success => {\r\n            const candidate = _.find(autocompleteData, {code});\r\n            success(candidate ? candidate.value : 'Unresolved code');\r\n        });\r\n    };\r\n\r\n    const searcher = text => {\r\n        return new Promise(success => {\r\n            _.delay(() => {\r\n                const result = autocompleteData.filter(item => {\r\n                    return text === '' || item.value.toLowerCase().indexOf(text.toLowerCase()) !== -1;\r\n                });\r\n                success(result);\r\n            }, 1);\r\n        });\r\n    }\r\n\r\n    const FormExample = React.createClass({\r\n        displayName: \"FormExample\",\r\n        mixins: [formMixin],\r\n        stores: [{\r\n            store: contactStore,\r\n            properties: [\"contact\", \"commandes\"],\r\n        }],\r\n        definitionPath: \"contact\",\r\n        action: action,\r\n        referenceNames: ['papas', 'monkeys'],\r\n\r\n        /**\r\n        * Render content form.\r\n        * @return {ReactDOMNode} node REACT\r\n        */\r\n        renderContent() {\r\n            return (\r\n                <Panel title=\"Fiche de l'utilisateur\" actions={this._renderActions}>\r\n                    {this.fieldFor(\"firstName\")}\r\n                    {this.fieldFor(\"lastName\")}\r\n                    {this.fieldFor('papaCode', {listName: 'papas'})}\r\n                    {this.fieldFor('monkeyCode', {listName: 'monkeys', valueKey: 'myCustomCode', labelKey: 'myCustomLabel' })}\r\n                    {this.fieldFor(\"bio\")}\r\n                    {this.fieldFor(\"isCool\")}\r\n                    {this.fieldFor(\"isNice\")}\r\n                    {\r\n                        this.textFor(\"birthDate\", {\r\n                            formatter: function (date) {\r\n                                return \"formatted date\" + date\r\n                            }\r\n                        })\r\n                    }\r\n                    {this.fieldFor(\"birthDate\")}\r\n                </Panel>\r\n            );\r\n        }\r\n    });\r\n\r\n\r\n    return (\r\n        <div>\r\n            <MessageCenter />\r\n            <FormExample isEdit={false}/>\r\n        </div>\r\n    );\r\n"
    },
    {
        "name": "icon",
        "version": "1.0.0",
        "description": "Icon for all applications.",
        "keywords": [
            "icon",
            "dumb"
        ],
        "code": "const Icon = FocusComponents.common.icon.component;\r\n\r\nconst IconSample = React.createClass({\r\n    /**\r\n    * Render the component.\r\n    * @return {object} React node\r\n    */\r\n    render() {\r\n        return (\r\n            <div className='icon-example'>\r\n                <h2>Material</h2>\r\n                <Icon name='account_circle'/>\r\n                <br /><br />\r\n                 <Icon name='loyalty' style={{color: 'tomato'}}/>\r\n                 <br />\r\n                 <h2>Font awesome </h2>\r\n                 <Icon name='circle' library='font-awesome'/>\r\n            </div>\r\n        );\r\n    }\r\n});\r\n\r\nreturn <IconSample/>;\r\n"
    },
    {
        "name": "checkbox",
        "version": "1.0.0",
        "description": "Example of input-checkbox use",
        "keywords": [
            "input",
            "checkbox"
        ],
        "code": "// Components\r\nconst Checkbox = FocusComponents.common.input.checkbox.component;\r\n\r\nconst InputCheckboxSample = React.createClass({\r\n    /**\r\n    * Handle click action to get check value.\r\n    */\r\n    handleGetValueClick(){\r\n        const value = this.refs.cbTestGetValue.getValue();\r\n        alert('Checkbox value: ' + value);\r\n    },\r\n\r\n    /**\r\n    * Render the component.\r\n    * @return {object} React node\r\n    */\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3>Input checkbox</h3>\r\n                <Checkbox value={true} label=\"My awsome checkbox\"/>\r\n\r\n                <h3>Unselected checkbox</h3>\r\n                <Checkbox value={false} label=\"My awsome checkbox\"/>\r\n\r\n                <h3>Without label</h3>\r\n                <Checkbox value={true} />\r\n\r\n                <h3>Get Checkbox value</h3>\r\n                <div style={{float:'left', width: '300px'}}>\r\n                    <Checkbox value={true} label=\"My awsome checkbox\" ref=\"cbTestGetValue\"/>\r\n                </div>\r\n                <div style={{marginLeft:'300px'}}>\r\n                    <button onClick={this.handleGetValueClick}>Get the checkbox value</button>\r\n                </div>\r\n        </div>);\r\n    }\r\n});\r\n\r\nreturn <InputCheckboxSample />;\r\n"
    },
    {
        "name": "input-radio",
        "version": "1.0.0",
        "description": "Example of radio use",
        "keywords": [
            "input",
            "radio"
        ],
        "code": "const InputRadio = FocusComponents.common.input.radio.component;\r\n\r\nconst InputRadioSample = React.createClass({\r\n    /**\r\n    * Render the component.\r\n    * @return {object} React node\r\n    */\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3>With value : False</h3>\r\n                <div>\r\n                    <InputRadio name=\"options1\" value={false} label=\"Value False\" />\r\n                </div>\r\n                <h3>With value : True</h3>\r\n                <div>\r\n                    <InputRadio name=\"options2\" value={true} label=\"Value True\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n});\r\n\r\nreturn <InputRadioSample />;\r\n"
    },
    {
        "name": "input-text",
        "version": "1.0.0",
        "description": "Example of input�-text",
        "keywords": [
            "input",
            "text"
        ],
        "code": "const InputText = FocusComponents.common.input.text.component;\r\n\r\nconst InputTextSample = React.createClass({\r\n    /**\r\n    * Render the component.\r\n    * @return {object} React node\r\n    */\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3>Without value</h3>\r\n                <div><InputText placeHolder=\"Put your value here...\" /></div>\r\n\r\n                <h3>With value</h3>\r\n                <InputText value=\"Lorem Ipsum\" />\r\n\r\n                <h3>Input with error</h3>\r\n                <InputText value=\"Lorem Ipsum\" error=\"Hey! you've done someting wrong!\" />\r\n\r\n                <h3>Get the value</h3>\r\n                <InputText value=\"Lorem Ipsum\" ref=\"myInputText\"/>\r\n                <button onClick={()=>{alert(this.refs.myInputText.getValue())}}>Get the input value</button>\r\n            </div>\r\n        );\r\n    }\r\n});\r\n\r\nreturn <InputTextSample />;\r\n"
    },
    {
        "name": "input-textarea",
        "version": "1.0.0",
        "description": "Example of input textarea use",
        "keywords": [
            "input",
            "text",
            "textarea"
        ],
        "code": "\r\nconst TextArea = FocusComponents.common.input.textarea.component;\r\n\r\nconst InputTextAreaSample = React.createClass({\r\n    render() {\r\n        const value = \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. In a accumsan dolor. Nullam in euismod risus. Integer finibus tellus porta tristique tincidunt. Mauris ac velit a nulla ultricies aliquet vitae facilisis lectus. Praesent eget eleifend augue. Curabitur vel metus feugiat, faucibus elit eu, mollis mi. Integer viverra finibus est, a tristique sem pharetra ut. Aenean dignissim, leo eu eleifend tincidunt, ex erat vulputate purus, nec commodo felis velit ac augue. Duis sed iaculis quam, quis dictum augue. Duis ac leo dolor. Integer sit amet quam metus. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Vestibulum aliquam mollis felis, non consectetur sem fermentum ac. Vivamus facilisis eleifend leo non tincidunt. Nam orci eros, blandit aliquam sodales vitae, ultrices ac sem. Nunc quis dui a est fringilla faucibus.\";\r\n        return (\r\n            <TextArea\r\n                value={value}\r\n                label=\"My awsome textarea\"\r\n                cols={5}\r\n                rows={5}\r\n                maxLength={1000}\r\n                maxLength={3} />\r\n        );\r\n    }\r\n});\r\n\r\nreturn <InputTextAreaSample />;\r\n"
    },
    {
        "name": "scrollspy",
        "version": "1.0.0",
        "description": "Example of scrollspy use.",
        "keywords": [
            "scroll",
            "spy",
            "menu",
            "detail",
            "block",
            "nav"
        ],
        "code": "const Scrollspy = FocusComponents.common.scrollspy.component;\r\nconst Title = FocusComponents.common.title.component;\r\n\r\nconst ScrollspySample = React.createClass({\r\n    /**\r\n    * Render the component.\r\n    * @return {object} React node\r\n    */\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Scrollspy</h1>\r\n                <Scrollspy>\r\n                    <Title label=\"Sports\" />\r\n                    <img alt=\"lorempixel\" src=\"http://lorempixel.com/800/600/sports\" title=\"lorempixel\" />\r\n\r\n                    <Title label=\"Animals\" />\r\n                    <img alt=\"lorempixel\" src=\"http://lorempixel.com/800/600/animals\" title=\"lorempixel\" />\r\n\r\n                    <Title label=\"Business\" />\r\n                    <img alt=\"lorempixel\" src=\"http://lorempixel.com/800/600/business\" title=\"lorempixel\" />\r\n\r\n                    <Title label=\"Cats\" />\r\n                    <img alt=\"lorempixel\" src=\"http://lorempixel.com/800/600/cats\" title=\"lorempixel\" />\r\n\r\n                    <Title label=\"City\" />\r\n                    <img alt=\"lorempixel\" src=\"http://lorempixel.com/800/600/city\" title=\"lorempixel\" />\r\n\r\n                    <Title label=\"Food\" />\r\n                    <img alt=\"lorempixel\" src=\"http://lorempixel.com/800/600/food\" title=\"lorempixel\" />\r\n\r\n                    <Title label=\"Nightlife\" />\r\n                    <img alt=\"lorempixel\" src=\"http://lorempixel.com/800/600/nightlife\" title=\"lorempixel\" />\r\n\r\n                    <Title label=\"Fashion\" />\r\n                    <img alt=\"lorempixel\" src=\"http://lorempixel.com/800/600/fashion\" title=\"lorempixel\" />\r\n\r\n                    <Title label=\"People\" />\r\n                    <img alt=\"lorempixel\" src=\"http://lorempixel.com/800/600/people\" title=\"lorempixel\" />\r\n\r\n                    <Title label=\"Nature\" />\r\n                    <img alt=\"lorempixel\" src=\"http://lorempixel.com/800/600/nature\" title=\"lorempixel\" />\r\n\r\n                    <Title label=\"Technics\" />\r\n                    <img alt=\"lorempixel\" src=\"http://lorempixel.com/800/600/technics\" title=\"lorempixel\" />\r\n\r\n                    <Title label=\"Transport\" />\r\n                    <img alt=\"lorempixel\" src=\"http://lorempixel.com/800/600/transport\" title=\"lorempixel\" />\r\n                </Scrollspy>\r\n            </div>\r\n        );\r\n    }\r\n});\r\n\r\nreturn <ScrollspySample />;\r\n"
    },
    {
        "name": "select-checkbox",
        "version": "1.0.0",
        "description": "Example of select-checkbox use",
        "keywords": [
            "input",
            "select",
            "checkbox"
        ],
        "code": "const SelectCheckbox = FocusComponents.common.select.checkbox.component;\r\nconst {pull} = _;\r\n\r\nconst possibleValues = [{value: \"A\", label: \"Value A\"},{value: \"B\", label: \"Value B\"}, {value: \"C\", label: \"Value C\"}, {value: \"D\", label: \"Value D\"}];\r\n\r\nconst SelectCheckboxSample = React.createClass({\r\n\r\n    /**\r\n    * Handle click action to get check value.\r\n    */\r\n    handleGetValueClick(){\r\n        const values = this.refs.mySelectCheckbox.getValue();\r\n        alert('Selected values IDs: ' + values);\r\n    },\r\n\r\n\r\n    /** @inheritdoc */\r\n    getInitialState() {\r\n        return {\r\n            selectedValues: ['B']\r\n        };\r\n    },\r\n\r\n    /**\r\n    * Handle click action to get check value.\r\n    */\r\n    handleGetValueClick2(key, newStatus){\r\n        const selectedValues = this.state.selectedValues;\r\n        if(newStatus) {\r\n            selectedValues.push(key);\r\n        } else {\r\n            pull(selectedValues, key);\r\n        }\r\n        this.setState({value: selectedValues});\r\n        alert('Selected values IDs: ' + this.state.selectedValues);\r\n    },\r\n\r\n\r\n    /**\r\n    * Render the component.\r\n    * @return {object} React node\r\n    */\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3>List of checkboxes</h3>\r\n                <SelectCheckbox\r\n                    values={possibleValues} ref=\"mySelectCheckbox\" />\r\n                <h3>List of checkboxes with preselected values</h3>\r\n                <SelectCheckbox\r\n                    value={['B']}\r\n                    values={possibleValues} ref=\"mySelectCheckbox\" />\r\n                <br />\r\n                <button onClick={this.handleGetValueClick}>Get the selected values</button>\r\n                <h3>Add OnChange event</h3>\r\n                <SelectCheckbox\r\n                    value={this.state.selectedValues}\r\n                    values={possibleValues} ref=\"mySelectCheckbox2\" onChange={this.handleGetValueClick2} />\r\n            </div>\r\n        );\r\n    }\r\n});\r\n\r\nreturn <SelectCheckboxSample />;\r\n"
    },
    {
        "name": "select-classic",
        "version": "1.0.0",
        "description": "Sample of select use.",
        "keywords": [
            "input",
            "select",
            "classic"
        ],
        "code": "const SelectInput = FocusComponents.common.select.classic.component;\r\n\r\n\r\nconst valuesExample = [\r\n    {code: \"A\", label: \"aaaa\"},\r\n    {code: \"B\", label: \"bbbbb\"},\r\n    {code: \"C\", label: \"ccccc\"},\r\n    {code: \"D\", label: \"DDDD\"}\r\n];\r\nconst valuesCustomExample = [\r\n    {id: \"custom\", name: \"aaaaCustom\"},\r\n    {id: \"BCustom\", name: \"bbbbbCustom\"},\r\n    {id: \"CCustom\", name: \"cccccCustom\"}\r\n];\r\nconst valuesInt = [\r\n    {code: 1, label: \"aInt\"},\r\n    {code: 2, label: \"bInt\"},\r\n    {code: 3, label: \"cInt\"}\r\n];\r\n\r\n\r\nconst SelectInputSample = React.createClass({\r\n    /**\r\n    * Render the component.\r\n    * @return {object} React node\r\n    */\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3>Liste simple sans valeur préselectionnée</h3>\r\n                <p>\r\n                <span>hasUndefined forcé</span>\r\n                <SelectInput value='B' hasUndefined={false} values={valuesExample}/>\r\n                </p>\r\n                <p>\r\n                <span>Non requis</span>\r\n                <SelectInput value='B' isRequired={false} values={valuesExample}/>\r\n                </p>\r\n                <p>\r\n                <span>Requis</span>\r\n                <SelectInput value='B' isRequired={true} values={valuesExample}/>\r\n                </p>\r\n                <h3>Liste simple avec valeur préselectionnée</h3>\r\n                <SelectInput values={valuesExample}/>\r\n\r\n                <h3>Liste simple avec redéfinition des code /value</h3>\r\n                <SelectInput values={valuesCustomExample} valueKey='id' labelKey='name'/>\r\n\r\n                <h3>Liste simple sans valeur préselectionnée</h3>\r\n                <SelectInput value={['B','C']} multiple={true} values={valuesExample}/>\r\n\r\n                <h3>Liste simple avec valeurs entières</h3>\r\n                <SelectInput value={1} values={valuesInt} />\r\n\r\n                <h3>Liste désactivée</h3>\r\n                <SelectInput value={1} values={valuesInt} disabled={true} />\r\n            </div>\r\n        );\r\n    }\r\n});\r\n\r\nreturn <SelectInputSample />;\r\n"
    },
    {
        "name": "select-radio",
        "version": "1.0.0",
        "description": "Example of select radio use",
        "keywords": [
            "input",
            "select",
            "radio"
        ],
        "code": "const SelectRadio = FocusComponents.common.select.radio.component;\r\n\r\nconst values = [{code: \"A\", label: \"Value A\"}, {code: \"B\", label: \"Value B\"}, {code: \"C\", label: \"Value C\"}];\r\n\r\nconst SelectRadioSample = React.createClass({\r\n\r\n    /**\r\n    * Handle click action to get check value.\r\n    */\r\n    handleGetValueClick(){\r\n        const value = this.refs.mySelectRadio.getValue();\r\n        alert('Selected values ID: ' + value);\r\n    },\r\n\r\n    /** @inheritdoc */\r\n    getInitialState() {\r\n        return {\r\n            value: 'A'\r\n        };\r\n    },\r\n\r\n    /**\r\n    * Handle click action to get check value.\r\n    */\r\n    handleOnChange(newValue){\r\n        this.setState({value: newValue});\r\n        alert('Selected values ID: ' + newValue);\r\n    },\r\n\r\n    /**\r\n    * Render the component.\r\n    * @return {object} React node\r\n    */\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3>Classic select radio</h3>\r\n                <SelectRadio\r\n                    value='B'\r\n                    values={values} />\r\n                <h3>Classic select radio</h3>\r\n                <SelectRadio\r\n                    value='B'\r\n                    values={values} ref=\"mySelectRadio\" />\r\n                <br/>\r\n                <button onClick={this.handleGetValueClick}>Get the selected value</button>\r\n                <h3>OnChange event overload</h3>\r\n                <SelectRadio\r\n                    value={this.state.value}\r\n                    values={values} onChange={this.handleOnChange} />\r\n            </div>);\r\n    }\r\n});\r\n\r\n\r\nreturn <SelectRadioSample />;\r\n"
    },
    {
        "name": "select-action",
        "version": "1.0.0",
        "description": "Dropdown component.",
        "keywords": [
            "dropdown",
            "dynamic",
            "actions",
            "selection"
        ],
        "code": "const Dropdown = FocusComponents.common.selectAction.component;\r\nconst operationList = [\r\n    {\r\n        label: 'Action_a',\r\n        action() {\r\n            alert('Actiona');\r\n        }\r\n    },\r\n    {\r\n        label: 'Action_b',\r\n        action() {\r\n            alert('Actionb');\r\n        }\r\n    },\r\n    {\r\n        label: 'Action_c',\r\n        action() {\r\n            alert('Actionc');\r\n        }\r\n    }\r\n];\r\n\r\nreturn <Dropdown operationList={operationList}/>;\r\n"
    },
    {
        "name": "Input checkbox",
        "version": "1.0.0",
        "description": "Input checkbox component.",
        "keywords": [
            "dumb",
            "input",
            "boolean",
            "checkbox",
            "material"
        ],
        "code": "// Dependencies\r\n\r\nconst {Component} = React;\r\n\r\n// Components\r\n\r\nconst Checkbox = FocusComponents.components.input.Checkbox;\r\n\r\nclass InputCheckboxSample extends Component {\r\n    /**\r\n    * Handle click action to get check value.\r\n    */\r\n    handleGetValueClick = () => {\r\n        const value = this.refs.cbTestGetValue.getValue();\r\n        alert('Checkbox value: ' + value);\r\n    }\r\n\r\n    /**\r\n    * Render the component.\r\n    * @return {object} React node\r\n    */\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3>Input checkbox</h3>\r\n                <Checkbox label='My awsome checkbox' value={true}/>\r\n\r\n                <h3>Unselected checkbox</h3>\r\n                <Checkbox label='My awsome checkbox' value={false} />\r\n\r\n                <h3>Without label</h3>\r\n                <Checkbox value={true} />\r\n\r\n                <h3>Get Checkbox value</h3>\r\n                <div style={{float: 'left', width: '300px'}}>\r\n                    <Checkbox label='My awsome checkbox' ref='cbTestGetValue' value={true}/>\r\n                </div>\r\n                <div style={{marginLeft: '300px'}}>\r\n                    <button onClick={this.handleGetValueClick}>Get the checkbox value</button>\r\n                </div>\r\n        </div>);\r\n    }\r\n}\r\n\r\nreturn <InputCheckboxSample />;\r\n"
    },
    {
        "name": "Input date",
        "version": "1.0.0",
        "description": "Input Date component.",
        "keywords": [
            "dumb",
            "input",
            "date",
            "material"
        ],
        "code": "// Components\r\n\r\nconst InputDate = FocusComponents.components.input.Date;\r\n\r\nclass InputDateSample extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            date1 : moment().toISOString()\r\n        }\r\n    }\r\n\r\n    changeHandler = (id) => {\r\n        return value => {\r\n            const {isValid, message} = this.refs[`date${id}`].validate();\r\n                this.setState({\r\n                    [`date${id}`]: value,\r\n                    [`error${id}`]: isValid ? null : message\r\n                });\r\n        }\r\n    }\r\n\r\n    render = () => {\r\n        const {date1, error1} = this.state;\r\n        return (\r\n            <div>\r\n                <h3>With value</h3>\r\n                <InputDate error={error1} format='DD/MM/YYYY' locale='fr' name='date1' onChange={this.changeHandler(1)} ref='date1' value={date1} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nreturn <InputDateSample/>;\r\n"
    },
    {
        "name": "select",
        "version": "1.0.0",
        "description": "Select HTML component.",
        "keywords": [
            "select",
            "form",
            "input"
        ],
        "code": "const SelectInput = FocusComponents.components.input.Select;\r\n\r\nconst valuesExample = [\r\n    {code: \"A\", label: \"aaaa\"},\r\n    {code: \"B\", label: \"bbbbb\"},\r\n    {code: \"C\", label: \"ccccc\"},\r\n    {code: \"D\", label: \"DDDD\"}\r\n];\r\nconst valuesCustomExample = [\r\n    {id: \"custom\", name: \"aaaaCustom\"},\r\n    {id: \"BCustom\", name: \"bbbbbCustom\"},\r\n    {id: \"CCustom\", name: \"cccccCustom\"}\r\n];\r\nconst valuesInt = [\r\n    {code: 1, label: \"aInt\"},\r\n    {code: 2, label: \"bInt\"},\r\n    {code: 3, label: \"cInt\"}\r\n];\r\nfunction _capitalize(string){\r\n      return string && (string.charAt(0).toUpperCase() + string.slice(1));\r\n}\r\n\r\n\r\nconst SelectSample = React.createClass({\r\n    onChangeSelect(name){\r\n        return (value)=>{\r\n            console.log('change', name, value);\r\n            this.setState({[name]: value, [`error${_capitalize(name)}`]: null});\r\n        };\r\n    },\r\n    getInitialState(){\r\n            return {\r\n                valueHasUndefined: 'B',\r\n                valueNonRequis: 'B',\r\n                valueRequis: 'B',\r\n                valueWithoutValue: null,\r\n                valueCodeRedefined: null,\r\n                valueIntValues: 1,\r\n                valueListDesactive: 1,\r\n                valueError: '1111',\r\n                errorValueError: 'Erreur sur le champ select'\r\n            };\r\n    },\r\n    /**\r\n    * Render the component.\r\n    * @return {object} React node\r\n    */\r\n    render() {\r\n        const {valueHasUndefined, valueNonRequis, valueRequis, valueWithoutValue, valueCodeRedefined, valueIntValues, valueListDesactive, valueError,errorValueError} = this.state;\r\n        return (\r\n            <div>\r\n                <pre>{JSON.stringify(this.state)}</pre>\r\n                <h3>Liste simple avec valeur préselectionnée</h3>\r\n                <p>\r\n                    <span>hasUndefined forcé</span>\r\n                    <SelectInput hasUndefined={false} name='valueHasUndefined' onChange={this.onChangeSelect('valueHasUndefined')} values={valuesExample} value={valueHasUndefined}/>\r\n                </p>\r\n                <p>\r\n                    <span>Non requis</span>\r\n                    <SelectInput isRequired={false} name='valueNonRequis' onChange={this.onChangeSelect('valueNonRequis')} value={valueNonRequis} values={valuesExample}/>\r\n                </p>\r\n                <p>\r\n                <span>Requis</span>\r\n                    <SelectInput name='valueRequis' onChange={this.onChangeSelect('valueRequis')} isRequired={true} value={valueRequis}  values={valuesExample}/>\r\n                </p>\r\n                <h3>Liste simple sans valeur préselectionnée</h3>\r\n                <SelectInput name='valueWithoutValue' onChange={this.onChangeSelect('valueWithoutValue')} value={valueWithoutValue} values={valuesExample} />\r\n\r\n                <h3>Liste simple avec redéfinition des code /value</h3>\r\n                <SelectInput name='valueCodeRedefined' labelKey='name'  onChange={this.onChangeSelect('valueCodeRedefined')} valueKey='id' value={valueCodeRedefined} values={valuesCustomExample} />\r\n\r\n                <h3>Select avec une erreur</h3>\r\n                <h3>Liste simple avec redéfinition des code /value</h3>\r\n                <SelectInput error={errorValueError} name='valueError' onChange={this.onChangeSelect('valueError')} value={valueError} values={valuesExample} />\r\n\r\n                <h3>Liste simple avec valeurs entières</h3>\r\n                <SelectInput name='valueIntValues' onChange={this.onChangeSelect('valueIntValues')} value={valueIntValues}  values={valuesInt} />\r\n\r\n                <h3>Liste désactivée</h3>\r\n                <SelectInput  disabled={true} name='valueListDesactive' onChange={this.onChangeSelect('valueListDesactive')} value={valueListDesactive}  values={valuesInt} />\r\n            </div>\r\n        );\r\n    }\r\n});\r\n\r\nreturn <SelectSample />;\r\n"
    },
    {
        "name": "input-text",
        "version": "1.0.0",
        "description": "Input standard html",
        "keywords": [
            "input",
            "html",
            "text",
            "attribute"
        ],
        "code": "const Input = FocusComponents.components.input.Text;\r\n\r\nconst InputTextExample =  React.createClass({\r\n    onChangeInput(name){\r\n        return (value)=>{\r\n            this.setState({[name]: value});\r\n        };\r\n    },\r\n    getInitialState(){\r\n            return {inputWithValue: 'myAwesomeValue', inputWithError: 'errorValue'};\r\n    },\r\n    render(){\r\n        const {inputWithValue, inputWithoutValue, inputWithError, inputGetTheValue} =  this.state;\r\n        return (\r\n            <form>\r\n                <h3>Input with value</h3>\r\n                <Input name='inputWithValue' value={inputWithValue} onChange={this.onChangeInput('inputWithValue')} />\r\n\r\n                <h3>Without value</h3>\r\n                <Input placeholder=\"Put your value here...\" name='inputWithoutValue' value={inputWithoutValue} onChange={this.onChangeInput('inputWithoutValue')}/>\r\n\r\n                <h3>Input with error</h3>\r\n                <Input value=\"Lorem Ipsum\" error=\"Hey! you've done someting wrong!\" name='inputWithError' value={inputWithError} onChange={this.onChangeInput('inputWithError')}/>\r\n\r\n                <h3>Get the value</h3>\r\n                <Input value=\"Lorem Ipsum\" ref=\"myInputText\" name='inputGetTheValue' value={inputGetTheValue} onChange={this.onChangeInput('inputGetTheValue')}/>\r\n                <button onClick={()=>{alert(this.refs.myInputText.getValue())}}>Get the input value</button>\r\n            </form>\r\n        );\r\n    }\r\n});\r\n\r\nreturn <InputTextExample/>;\r\n"
    },
    {
        "name": "Input toggle",
        "version": "1.0.0",
        "description": "Input toggle component.",
        "keywords": [
            "dumb",
            "input",
            "boolean",
            "toggle",
            "material"
        ],
        "code": "// Dependencies\r\n\r\nconst {Component} = React;\r\n\r\n// Components\r\n\r\nconst Toggle = FocusComponents.components.input.Toggle;\r\n\r\nclass InputToggleSample extends Component {\r\n    /**\r\n    * Handle click action to get check value.\r\n    */\r\n    handleGetValueClick = () => {\r\n        const value = this.refs.toggleTestGetValue.getValue();\r\n        alert('Toggle value: ' + value);\r\n    }\r\n\r\n    /**\r\n    * Render the component.\r\n    * @return {object} React node\r\n    */\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3>Input toggle</h3>\r\n                <Toggle label='My awsome toggle' value={true}/>\r\n\r\n                <h3>Unselected toggle</h3>\r\n                <Toggle label='My awsome toggle' value={false} />\r\n\r\n                <h3>Without label</h3>\r\n                <Toggle value={true} />\r\n\r\n                <h3>Get Toggle value</h3>\r\n                <div style={{float: 'left', width: '300px'}}>\r\n                    <Toggle label='My awsome toggle' ref='toggleTestGetValue' value={true}/>\r\n                </div>\r\n                <div style={{marginLeft: '300px'}}>\r\n                    <button onClick={this.handleGetValueClick}>Get the toggle value</button>\r\n                </div>\r\n        </div>);\r\n    }\r\n}\r\n\r\nreturn <InputToggleSample />;\r\n"
    },
    {
        "name": "layout",
        "version": "1.0.0",
        "description": "Layout of the focus application",
        "keywords": [
            "layout",
            "dumb"
        ],
        "code": "const Layout = FocusComponents.components.Layout;\r\nconst MenuLeft = FocusComponents.components.MenuLeft;\r\n\r\nconst {dispatcher} = Focus;\r\nconst CartridgeContent = React.createClass({\r\n    render(){\r\n        return <div>CARTOUCHE</div>;\r\n    }\r\n});\r\nconst Summary = React.createClass({\r\n    render(){\r\n        return <div>SUMMARY</div>;\r\n    }\r\n});\r\nconst BarContentRight = React.createClass({\r\n    render(){\r\n        return <div>BAR RIGHT</div>;\r\n    }\r\n});\r\nconst BarContentLeft = React.createClass({\r\n    render(){\r\n        return <div>BAR LEFT</div>;\r\n    }\r\n});\r\nconst Test = React.createClass({\r\n    render() {\r\n        return <div>test</div>;\r\n    }\r\n});\r\nconst Footer = React.createClass({\r\n    render() {\r\n        return <div>&copy;KLEEGROUP 2015 - FOCUS Showcase - Layout</div>;\r\n    }\r\n});\r\n\r\n//Simple function to update components in the bar.\r\nfunction updateComponents(cartridgeConf) {\r\n    const {cartridge: cartridgeComponent, summary: summaryComponent, actions: actions, barLeft: barContentLeftComponent, barRight: barContentRightComponent} = cartridgeConf;\r\n    dispatcher.handleViewAction({\r\n        data: {\r\n            cartridgeComponent,\r\n            summaryComponent,\r\n            actions,\r\n            barContentLeftComponent,\r\n            barContentRightComponent\r\n        },\r\n        type: 'update'\r\n    });\r\n};\r\n//Add a defer in order to inject the props after the component is mounted\r\n_.defer(()=>{\r\n    updateComponents({\r\n        cartridge: {component: CartridgeContent, props:{}},\r\n        summary:{component: Summary, props:{}},\r\n        actions: {\r\n            primary: [{label:'Action 1', icon:'alarm_on', action:() => {console.log(\"click !\")}}, {label:'Action 2', icon:'build', action:() => {console.log(\"click !\")}}],\r\n            secondary: [{label:'Action 3', icon:'print', action:() => {console.log(\"click !\")}}, {label:'Action 4', icon:'print', action:() => {console.log(\"click !\")}}, {label:'Action 5', icon:'print', action:() => {console.log(\"click !\")}}]\r\n        },\r\n        barLeft: {component: BarContentLeft, props:{}},\r\n        barRight: {component: BarContentRight, props:{}}\r\n    })\r\n});\r\n\r\n\r\n\r\nconst LayoutExample =  React.createClass({\r\n    render(){\r\n        return (\r\n            <Layout MenuLeft={MenuLeft} Footer={Footer}>\r\n            <h3>Welcome on the layout component</h3>\r\n            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin congue dui ac mollis blandit. Nunc non consectetur mi. Curabitur et auctor nisl, ac dictum neque. Cras vitae varius enim. Quisque eleifend consequat dui. Ut nisi eros, ultricies nec erat eget, suscipit convallis tortor. Sed vel finibus ligula. Fusce facilisis risus sapien, ac ornare ipsum ultrices eu. Nullam pellentesque sem tempor ipsum pellentesque sodales. Nam sit amet cursus tortor. Duis condimentum mi at mi elementum scelerisque eget ac tortor. Nunc enim enim, vestibulum et volutpat rhoncus, scelerisque vel enim. Praesent quis est consectetur massa dictum euismod. Etiam ullamcorper efficitur lorem, eget vehicula justo venenatis euismod. Curabitur orci ex, sollicitudin at ante a, ultrices iaculis est. Quisque maximus tellus eget nisi bibendum, eu dapibus dui lobortis.</p>\r\n            <p>Sed faucibus nisl vel rhoncus commodo. Vestibulum maximus nisi eu tortor molestie, quis blandit eros sodales. Duis suscipit, nisl sit amet malesuada pharetra, lacus risus aliquet augue, eget imperdiet sem eros non risus. Pellentesque imperdiet ligula eu ante condimentum, eget eleifend elit consequat. Aliquam a ex eget mi lobortis iaculis. Curabitur ut sagittis magna. Praesent quis odio augue. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent sit amet ante id lacus gravida venenatis. Pellentesque quis odio a eros ultrices tempus non vel ex. Sed in rutrum diam. Proin vehicula, enim id elementum pharetra, purus magna tempor nisl, sed scelerisque orci lorem sit amet justo. Vestibulum eu volutpat quam. Nunc finibus rutrum iaculis. Aliquam erat volutpat. Nulla facilisi.</p>\r\n            <p>Fusce ex sapien, ultricies sollicitudin gravida vitae, ultrices ut ex. Morbi luctus tempus nisi. Maecenas at dolor ut purus auctor mattis eget in nunc. Nunc malesuada imperdiet venenatis. Duis varius purus odio, in venenatis enim laoreet id. Quisque eu turpis vestibulum, tincidunt nisi et, scelerisque nisi. Quisque pulvinar leo vitae ante feugiat vestibulum. Duis gravida vestibulum neque, a efficitur dui pulvinar ut. Vestibulum porttitor libero a mauris commodo, at sodales nisi elementum. Maecenas eleifend tristique quam, a pretium turpis posuere vitae. Maecenas quis fringilla lectus, ut mattis tellus. Praesent blandit tortor magna, ac fringilla orci bibendum a. Vivamus id auctor felis.</p>\r\n            <p>Nulla lobortis odio ut pharetra sagittis. Ut non finibus massa. Sed tempor tortor eu nibh efficitur feugiat. Proin congue ex ante, a ullamcorper erat sollicitudin sit amet. Vestibulum tempus turpis non justo elementum venenatis. Aenean pretium porta nisi in aliquam. Maecenas ac velit eget purus cursus laoreet vel eu nulla. Integer porta facilisis erat, at viverra nunc vulputate non. Sed neque ex, placerat at leo quis, scelerisque lacinia velit. Cras pharetra vitae nisi ac condimentum. Praesent rutrum dui sit amet lorem mattis sollicitudin.</p>\r\n            <p>Maecenas ut pellentesque ante, tincidunt luctus enim. Fusce vulputate justo felis, vehicula vehicula augue sodales sed. Vivamus tempor tristique turpis, ac interdum eros iaculis non. Aliquam eros purus, pulvinar vehicula odio sed, sollicitudin maximus dui. Donec consectetur est eu sem fermentum varius. Nulla facilisi. Phasellus suscipit lacus at ullamcorper sagittis. Nunc congue sit amet tortor non ultricies. Ut congue tortor ac porttitor tincidunt. Nam facilisis nulla quis massa congue, sed mattis lorem tristique. Vestibulum porta placerat metus, vel mattis dui. Mauris pellentesque mauris eu volutpat tincidunt. Mauris commodo, felis eget ultricies laoreet, nulla eros mattis nisl, ut tempor mi sem tempor dolor. Maecenas vel felis ut nibh suscipit tempus a et nisi.</p>\r\n            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin congue dui ac mollis blandit. Nunc non consectetur mi. Curabitur et auctor nisl, ac dictum neque. Cras vitae varius enim. Quisque eleifend consequat dui. Ut nisi eros, ultricies nec erat eget, suscipit convallis tortor. Sed vel finibus ligula. Fusce facilisis risus sapien, ac ornare ipsum ultrices eu. Nullam pellentesque sem tempor ipsum pellentesque sodales. Nam sit amet cursus tortor. Duis condimentum mi at mi elementum scelerisque eget ac tortor. Nunc enim enim, vestibulum et volutpat rhoncus, scelerisque vel enim. Praesent quis est consectetur massa dictum euismod. Etiam ullamcorper efficitur lorem, eget vehicula justo venenatis euismod. Curabitur orci ex, sollicitudin at ante a, ultrices iaculis est. Quisque maximus tellus eget nisi bibendum, eu dapibus dui lobortis.</p>\r\n            <p>Sed faucibus nisl vel rhoncus commodo. Vestibulum maximus nisi eu tortor molestie, quis blandit eros sodales. Duis suscipit, nisl sit amet malesuada pharetra, lacus risus aliquet augue, eget imperdiet sem eros non risus. Pellentesque imperdiet ligula eu ante condimentum, eget eleifend elit consequat. Aliquam a ex eget mi lobortis iaculis. Curabitur ut sagittis magna. Praesent quis odio augue. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent sit amet ante id lacus gravida venenatis. Pellentesque quis odio a eros ultrices tempus non vel ex. Sed in rutrum diam. Proin vehicula, enim id elementum pharetra, purus magna tempor nisl, sed scelerisque orci lorem sit amet justo. Vestibulum eu volutpat quam. Nunc finibus rutrum iaculis. Aliquam erat volutpat. Nulla facilisi.</p>\r\n            <p>Fusce ex sapien, ultricies sollicitudin gravida vitae, ultrices ut ex. Morbi luctus tempus nisi. Maecenas at dolor ut purus auctor mattis eget in nunc. Nunc malesuada imperdiet venenatis. Duis varius purus odio, in venenatis enim laoreet id. Quisque eu turpis vestibulum, tincidunt nisi et, scelerisque nisi. Quisque pulvinar leo vitae ante feugiat vestibulum. Duis gravida vestibulum neque, a efficitur dui pulvinar ut. Vestibulum porttitor libero a mauris commodo, at sodales nisi elementum. Maecenas eleifend tristique quam, a pretium turpis posuere vitae. Maecenas quis fringilla lectus, ut mattis tellus. Praesent blandit tortor magna, ac fringilla orci bibendum a. Vivamus id auctor felis.</p>\r\n            <p>Nulla lobortis odio ut pharetra sagittis. Ut non finibus massa. Sed tempor tortor eu nibh efficitur feugiat. Proin congue ex ante, a ullamcorper erat sollicitudin sit amet. Vestibulum tempus turpis non justo elementum venenatis. Aenean pretium porta nisi in aliquam. Maecenas ac velit eget purus cursus laoreet vel eu nulla. Integer porta facilisis erat, at viverra nunc vulputate non. Sed neque ex, placerat at leo quis, scelerisque lacinia velit. Cras pharetra vitae nisi ac condimentum. Praesent rutrum dui sit amet lorem mattis sollicitudin.</p>\r\n            <p>Maecenas ut pellentesque ante, tincidunt luctus enim. Fusce vulputate justo felis, vehicula vehicula augue sodales sed. Vivamus tempor tristique turpis, ac interdum eros iaculis non. Aliquam eros purus, pulvinar vehicula odio sed, sollicitudin maximus dui. Donec consectetur est eu sem fermentum varius. Nulla facilisi. Phasellus suscipit lacus at ullamcorper sagittis. Nunc congue sit amet tortor non ultricies. Ut congue tortor ac porttitor tincidunt. Nam facilisis nulla quis massa congue, sed mattis lorem tristique. Vestibulum porta placerat metus, vel mattis dui. Mauris pellentesque mauris eu volutpat tincidunt. Mauris commodo, felis eget ultricies laoreet, nulla eros mattis nisl, ut tempor mi sem tempor dolor. Maecenas vel felis ut nibh suscipit tempus a et nisi.</p>\r\n            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin congue dui ac mollis blandit. Nunc non consectetur mi. Curabitur et auctor nisl, ac dictum neque. Cras vitae varius enim. Quisque eleifend consequat dui. Ut nisi eros, ultricies nec erat eget, suscipit convallis tortor. Sed vel finibus ligula. Fusce facilisis risus sapien, ac ornare ipsum ultrices eu. Nullam pellentesque sem tempor ipsum pellentesque sodales. Nam sit amet cursus tortor. Duis condimentum mi at mi elementum scelerisque eget ac tortor. Nunc enim enim, vestibulum et volutpat rhoncus, scelerisque vel enim. Praesent quis est consectetur massa dictum euismod. Etiam ullamcorper efficitur lorem, eget vehicula justo venenatis euismod. Curabitur orci ex, sollicitudin at ante a, ultrices iaculis est. Quisque maximus tellus eget nisi bibendum, eu dapibus dui lobortis.</p>\r\n            <p>Sed faucibus nisl vel rhoncus commodo. Vestibulum maximus nisi eu tortor molestie, quis blandit eros sodales. Duis suscipit, nisl sit amet malesuada pharetra, lacus risus aliquet augue, eget imperdiet sem eros non risus. Pellentesque imperdiet ligula eu ante condimentum, eget eleifend elit consequat. Aliquam a ex eget mi lobortis iaculis. Curabitur ut sagittis magna. Praesent quis odio augue. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent sit amet ante id lacus gravida venenatis. Pellentesque quis odio a eros ultrices tempus non vel ex. Sed in rutrum diam. Proin vehicula, enim id elementum pharetra, purus magna tempor nisl, sed scelerisque orci lorem sit amet justo. Vestibulum eu volutpat quam. Nunc finibus rutrum iaculis. Aliquam erat volutpat. Nulla facilisi.</p>\r\n            <p>Fusce ex sapien, ultricies sollicitudin gravida vitae, ultrices ut ex. Morbi luctus tempus nisi. Maecenas at dolor ut purus auctor mattis eget in nunc. Nunc malesuada imperdiet venenatis. Duis varius purus odio, in venenatis enim laoreet id. Quisque eu turpis vestibulum, tincidunt nisi et, scelerisque nisi. Quisque pulvinar leo vitae ante feugiat vestibulum. Duis gravida vestibulum neque, a efficitur dui pulvinar ut. Vestibulum porttitor libero a mauris commodo, at sodales nisi elementum. Maecenas eleifend tristique quam, a pretium turpis posuere vitae. Maecenas quis fringilla lectus, ut mattis tellus. Praesent blandit tortor magna, ac fringilla orci bibendum a. Vivamus id auctor felis.</p>\r\n            <p>Nulla lobortis odio ut pharetra sagittis. Ut non finibus massa. Sed tempor tortor eu nibh efficitur feugiat. Proin congue ex ante, a ullamcorper erat sollicitudin sit amet. Vestibulum tempus turpis non justo elementum venenatis. Aenean pretium porta nisi in aliquam. Maecenas ac velit eget purus cursus laoreet vel eu nulla. Integer porta facilisis erat, at viverra nunc vulputate non. Sed neque ex, placerat at leo quis, scelerisque lacinia velit. Cras pharetra vitae nisi ac condimentum. Praesent rutrum dui sit amet lorem mattis sollicitudin.</p>\r\n            <p>Maecenas ut pellentesque ante, tincidunt luctus enim. Fusce vulputate justo felis, vehicula vehicula augue sodales sed. Vivamus tempor tristique turpis, ac interdum eros iaculis non. Aliquam eros purus, pulvinar vehicula odio sed, sollicitudin maximus dui. Donec consectetur est eu sem fermentum varius. Nulla facilisi. Phasellus suscipit lacus at ullamcorper sagittis. Nunc congue sit amet tortor non ultricies. Ut congue tortor ac porttitor tincidunt. Nam facilisis nulla quis massa congue, sed mattis lorem tristique. Vestibulum porta placerat metus, vel mattis dui. Mauris pellentesque mauris eu volutpat tincidunt. Mauris commodo, felis eget ultricies laoreet, nulla eros mattis nisl, ut tempor mi sem tempor dolor. Maecenas vel felis ut nibh suscipit tempus a et nisi.</p>\r\n            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin congue dui ac mollis blandit. Nunc non consectetur mi. Curabitur et auctor nisl, ac dictum neque. Cras vitae varius enim. Quisque eleifend consequat dui. Ut nisi eros, ultricies nec erat eget, suscipit convallis tortor. Sed vel finibus ligula. Fusce facilisis risus sapien, ac ornare ipsum ultrices eu. Nullam pellentesque sem tempor ipsum pellentesque sodales. Nam sit amet cursus tortor. Duis condimentum mi at mi elementum scelerisque eget ac tortor. Nunc enim enim, vestibulum et volutpat rhoncus, scelerisque vel enim. Praesent quis est consectetur massa dictum euismod. Etiam ullamcorper efficitur lorem, eget vehicula justo venenatis euismod. Curabitur orci ex, sollicitudin at ante a, ultrices iaculis est. Quisque maximus tellus eget nisi bibendum, eu dapibus dui lobortis.</p>\r\n            <p>Sed faucibus nisl vel rhoncus commodo. Vestibulum maximus nisi eu tortor molestie, quis blandit eros sodales. Duis suscipit, nisl sit amet malesuada pharetra, lacus risus aliquet augue, eget imperdiet sem eros non risus. Pellentesque imperdiet ligula eu ante condimentum, eget eleifend elit consequat. Aliquam a ex eget mi lobortis iaculis. Curabitur ut sagittis magna. Praesent quis odio augue. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent sit amet ante id lacus gravida venenatis. Pellentesque quis odio a eros ultrices tempus non vel ex. Sed in rutrum diam. Proin vehicula, enim id elementum pharetra, purus magna tempor nisl, sed scelerisque orci lorem sit amet justo. Vestibulum eu volutpat quam. Nunc finibus rutrum iaculis. Aliquam erat volutpat. Nulla facilisi.</p>\r\n            <p>Fusce ex sapien, ultricies sollicitudin gravida vitae, ultrices ut ex. Morbi luctus tempus nisi. Maecenas at dolor ut purus auctor mattis eget in nunc. Nunc malesuada imperdiet venenatis. Duis varius purus odio, in venenatis enim laoreet id. Quisque eu turpis vestibulum, tincidunt nisi et, scelerisque nisi. Quisque pulvinar leo vitae ante feugiat vestibulum. Duis gravida vestibulum neque, a efficitur dui pulvinar ut. Vestibulum porttitor libero a mauris commodo, at sodales nisi elementum. Maecenas eleifend tristique quam, a pretium turpis posuere vitae. Maecenas quis fringilla lectus, ut mattis tellus. Praesent blandit tortor magna, ac fringilla orci bibendum a. Vivamus id auctor felis.</p>\r\n            <p>Nulla lobortis odio ut pharetra sagittis. Ut non finibus massa. Sed tempor tortor eu nibh efficitur feugiat. Proin congue ex ante, a ullamcorper erat sollicitudin sit amet. Vestibulum tempus turpis non justo elementum venenatis. Aenean pretium porta nisi in aliquam. Maecenas ac velit eget purus cursus laoreet vel eu nulla. Integer porta facilisis erat, at viverra nunc vulputate non. Sed neque ex, placerat at leo quis, scelerisque lacinia velit. Cras pharetra vitae nisi ac condimentum. Praesent rutrum dui sit amet lorem mattis sollicitudin.</p>\r\n            <p>Maecenas ut pellentesque ante, tincidunt luctus enim. Fusce vulputate justo felis, vehicula vehicula augue sodales sed. Vivamus tempor tristique turpis, ac interdum eros iaculis non. Aliquam eros purus, pulvinar vehicula odio sed, sollicitudin maximus dui. Donec consectetur est eu sem fermentum varius. Nulla facilisi. Phasellus suscipit lacus at ullamcorper sagittis. Nunc congue sit amet tortor non ultricies. Ut congue tortor ac porttitor tincidunt. Nam facilisis nulla quis massa congue, sed mattis lorem tristique. Vestibulum porta placerat metus, vel mattis dui. Mauris pellentesque mauris eu volutpat tincidunt. Mauris commodo, felis eget ultricies laoreet, nulla eros mattis nisl, ut tempor mi sem tempor dolor. Maecenas vel felis ut nibh suscipit tempus a et nisi.</p>\r\n            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin congue dui ac mollis blandit. Nunc non consectetur mi. Curabitur et auctor nisl, ac dictum neque. Cras vitae varius enim. Quisque eleifend consequat dui. Ut nisi eros, ultricies nec erat eget, suscipit convallis tortor. Sed vel finibus ligula. Fusce facilisis risus sapien, ac ornare ipsum ultrices eu. Nullam pellentesque sem tempor ipsum pellentesque sodales. Nam sit amet cursus tortor. Duis condimentum mi at mi elementum scelerisque eget ac tortor. Nunc enim enim, vestibulum et volutpat rhoncus, scelerisque vel enim. Praesent quis est consectetur massa dictum euismod. Etiam ullamcorper efficitur lorem, eget vehicula justo venenatis euismod. Curabitur orci ex, sollicitudin at ante a, ultrices iaculis est. Quisque maximus tellus eget nisi bibendum, eu dapibus dui lobortis.</p>\r\n            <p>Sed faucibus nisl vel rhoncus commodo. Vestibulum maximus nisi eu tortor molestie, quis blandit eros sodales. Duis suscipit, nisl sit amet malesuada pharetra, lacus risus aliquet augue, eget imperdiet sem eros non risus. Pellentesque imperdiet ligula eu ante condimentum, eget eleifend elit consequat. Aliquam a ex eget mi lobortis iaculis. Curabitur ut sagittis magna. Praesent quis odio augue. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent sit amet ante id lacus gravida venenatis. Pellentesque quis odio a eros ultrices tempus non vel ex. Sed in rutrum diam. Proin vehicula, enim id elementum pharetra, purus magna tempor nisl, sed scelerisque orci lorem sit amet justo. Vestibulum eu volutpat quam. Nunc finibus rutrum iaculis. Aliquam erat volutpat. Nulla facilisi.</p>\r\n            <p>Fusce ex sapien, ultricies sollicitudin gravida vitae, ultrices ut ex. Morbi luctus tempus nisi. Maecenas at dolor ut purus auctor mattis eget in nunc. Nunc malesuada imperdiet venenatis. Duis varius purus odio, in venenatis enim laoreet id. Quisque eu turpis vestibulum, tincidunt nisi et, scelerisque nisi. Quisque pulvinar leo vitae ante feugiat vestibulum. Duis gravida vestibulum neque, a efficitur dui pulvinar ut. Vestibulum porttitor libero a mauris commodo, at sodales nisi elementum. Maecenas eleifend tristique quam, a pretium turpis posuere vitae. Maecenas quis fringilla lectus, ut mattis tellus. Praesent blandit tortor magna, ac fringilla orci bibendum a. Vivamus id auctor felis.</p>\r\n            <p>Nulla lobortis odio ut pharetra sagittis. Ut non finibus massa. Sed tempor tortor eu nibh efficitur feugiat. Proin congue ex ante, a ullamcorper erat sollicitudin sit amet. Vestibulum tempus turpis non justo elementum venenatis. Aenean pretium porta nisi in aliquam. Maecenas ac velit eget purus cursus laoreet vel eu nulla. Integer porta facilisis erat, at viverra nunc vulputate non. Sed neque ex, placerat at leo quis, scelerisque lacinia velit. Cras pharetra vitae nisi ac condimentum. Praesent rutrum dui sit amet lorem mattis sollicitudin.</p>\r\n            <p>Maecenas ut pellentesque ante, tincidunt luctus enim. Fusce vulputate justo felis, vehicula vehicula augue sodales sed. Vivamus tempor tristique turpis, ac interdum eros iaculis non. Aliquam eros purus, pulvinar vehicula odio sed, sollicitudin maximus dui. Donec consectetur est eu sem fermentum varius. Nulla facilisi. Phasellus suscipit lacus at ullamcorper sagittis. Nunc congue sit amet tortor non ultricies. Ut congue tortor ac porttitor tincidunt. Nam facilisis nulla quis massa congue, sed mattis lorem tristique. Vestibulum porta placerat metus, vel mattis dui. Mauris pellentesque mauris eu volutpat tincidunt. Mauris commodo, felis eget ultricies laoreet, nulla eros mattis nisl, ut tempor mi sem tempor dolor. Maecenas vel felis ut nibh suscipit tempus a et nisi.</p>\r\n            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin congue dui ac mollis blandit. Nunc non consectetur mi. Curabitur et auctor nisl, ac dictum neque. Cras vitae varius enim. Quisque eleifend consequat dui. Ut nisi eros, ultricies nec erat eget, suscipit convallis tortor. Sed vel finibus ligula. Fusce facilisis risus sapien, ac ornare ipsum ultrices eu. Nullam pellentesque sem tempor ipsum pellentesque sodales. Nam sit amet cursus tortor. Duis condimentum mi at mi elementum scelerisque eget ac tortor. Nunc enim enim, vestibulum et volutpat rhoncus, scelerisque vel enim. Praesent quis est consectetur massa dictum euismod. Etiam ullamcorper efficitur lorem, eget vehicula justo venenatis euismod. Curabitur orci ex, sollicitudin at ante a, ultrices iaculis est. Quisque maximus tellus eget nisi bibendum, eu dapibus dui lobortis.</p>\r\n            <p>Sed faucibus nisl vel rhoncus commodo. Vestibulum maximus nisi eu tortor molestie, quis blandit eros sodales. Duis suscipit, nisl sit amet malesuada pharetra, lacus risus aliquet augue, eget imperdiet sem eros non risus. Pellentesque imperdiet ligula eu ante condimentum, eget eleifend elit consequat. Aliquam a ex eget mi lobortis iaculis. Curabitur ut sagittis magna. Praesent quis odio augue. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent sit amet ante id lacus gravida venenatis. Pellentesque quis odio a eros ultrices tempus non vel ex. Sed in rutrum diam. Proin vehicula, enim id elementum pharetra, purus magna tempor nisl, sed scelerisque orci lorem sit amet justo. Vestibulum eu volutpat quam. Nunc finibus rutrum iaculis. Aliquam erat volutpat. Nulla facilisi.</p>\r\n            <p>Fusce ex sapien, ultricies sollicitudin gravida vitae, ultrices ut ex. Morbi luctus tempus nisi. Maecenas at dolor ut purus auctor mattis eget in nunc. Nunc malesuada imperdiet venenatis. Duis varius purus odio, in venenatis enim laoreet id. Quisque eu turpis vestibulum, tincidunt nisi et, scelerisque nisi. Quisque pulvinar leo vitae ante feugiat vestibulum. Duis gravida vestibulum neque, a efficitur dui pulvinar ut. Vestibulum porttitor libero a mauris commodo, at sodales nisi elementum. Maecenas eleifend tristique quam, a pretium turpis posuere vitae. Maecenas quis fringilla lectus, ut mattis tellus. Praesent blandit tortor magna, ac fringilla orci bibendum a. Vivamus id auctor felis.</p>\r\n            <p>Nulla lobortis odio ut pharetra sagittis. Ut non finibus massa. Sed tempor tortor eu nibh efficitur feugiat. Proin congue ex ante, a ullamcorper erat sollicitudin sit amet. Vestibulum tempus turpis non justo elementum venenatis. Aenean pretium porta nisi in aliquam. Maecenas ac velit eget purus cursus laoreet vel eu nulla. Integer porta facilisis erat, at viverra nunc vulputate non. Sed neque ex, placerat at leo quis, scelerisque lacinia velit. Cras pharetra vitae nisi ac condimentum. Praesent rutrum dui sit amet lorem mattis sollicitudin.</p>\r\n            <p>Maecenas ut pellentesque ante, tincidunt luctus enim. Fusce vulputate justo felis, vehicula vehicula augue sodales sed. Vivamus tempor tristique turpis, ac interdum eros iaculis non. Aliquam eros purus, pulvinar vehicula odio sed, sollicitudin maximus dui. Donec consectetur est eu sem fermentum varius. Nulla facilisi. Phasellus suscipit lacus at ullamcorper sagittis. Nunc congue sit amet tortor non ultricies. Ut congue tortor ac porttitor tincidunt. Nam facilisis nulla quis massa congue, sed mattis lorem tristique. Vestibulum porta placerat metus, vel mattis dui. Mauris pellentesque mauris eu volutpat tincidunt. Mauris commodo, felis eget ultricies laoreet, nulla eros mattis nisl, ut tempor mi sem tempor dolor. Maecenas vel felis ut nibh suscipit tempus a et nisi.</p>\r\n            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin congue dui ac mollis blandit. Nunc non consectetur mi. Curabitur et auctor nisl, ac dictum neque. Cras vitae varius enim. Quisque eleifend consequat dui. Ut nisi eros, ultricies nec erat eget, suscipit convallis tortor. Sed vel finibus ligula. Fusce facilisis risus sapien, ac ornare ipsum ultrices eu. Nullam pellentesque sem tempor ipsum pellentesque sodales. Nam sit amet cursus tortor. Duis condimentum mi at mi elementum scelerisque eget ac tortor. Nunc enim enim, vestibulum et volutpat rhoncus, scelerisque vel enim. Praesent quis est consectetur massa dictum euismod. Etiam ullamcorper efficitur lorem, eget vehicula justo venenatis euismod. Curabitur orci ex, sollicitudin at ante a, ultrices iaculis est. Quisque maximus tellus eget nisi bibendum, eu dapibus dui lobortis.</p>\r\n            <p>Sed faucibus nisl vel rhoncus commodo. Vestibulum maximus nisi eu tortor molestie, quis blandit eros sodales. Duis suscipit, nisl sit amet malesuada pharetra, lacus risus aliquet augue, eget imperdiet sem eros non risus. Pellentesque imperdiet ligula eu ante condimentum, eget eleifend elit consequat. Aliquam a ex eget mi lobortis iaculis. Curabitur ut sagittis magna. Praesent quis odio augue. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent sit amet ante id lacus gravida venenatis. Pellentesque quis odio a eros ultrices tempus non vel ex. Sed in rutrum diam. Proin vehicula, enim id elementum pharetra, purus magna tempor nisl, sed scelerisque orci lorem sit amet justo. Vestibulum eu volutpat quam. Nunc finibus rutrum iaculis. Aliquam erat volutpat. Nulla facilisi.</p>\r\n            <p>Fusce ex sapien, ultricies sollicitudin gravida vitae, ultrices ut ex. Morbi luctus tempus nisi. Maecenas at dolor ut purus auctor mattis eget in nunc. Nunc malesuada imperdiet venenatis. Duis varius purus odio, in venenatis enim laoreet id. Quisque eu turpis vestibulum, tincidunt nisi et, scelerisque nisi. Quisque pulvinar leo vitae ante feugiat vestibulum. Duis gravida vestibulum neque, a efficitur dui pulvinar ut. Vestibulum porttitor libero a mauris commodo, at sodales nisi elementum. Maecenas eleifend tristique quam, a pretium turpis posuere vitae. Maecenas quis fringilla lectus, ut mattis tellus. Praesent blandit tortor magna, ac fringilla orci bibendum a. Vivamus id auctor felis.</p>\r\n            <p>Nulla lobortis odio ut pharetra sagittis. Ut non finibus massa. Sed tempor tortor eu nibh efficitur feugiat. Proin congue ex ante, a ullamcorper erat sollicitudin sit amet. Vestibulum tempus turpis non justo elementum venenatis. Aenean pretium porta nisi in aliquam. Maecenas ac velit eget purus cursus laoreet vel eu nulla. Integer porta facilisis erat, at viverra nunc vulputate non. Sed neque ex, placerat at leo quis, scelerisque lacinia velit. Cras pharetra vitae nisi ac condimentum. Praesent rutrum dui sit amet lorem mattis sollicitudin.</p>\r\n            <p>Maecenas ut pellentesque ante, tincidunt luctus enim. Fusce vulputate justo felis, vehicula vehicula augue sodales sed. Vivamus tempor tristique turpis, ac interdum eros iaculis non. Aliquam eros purus, pulvinar vehicula odio sed, sollicitudin maximus dui. Donec consectetur est eu sem fermentum varius. Nulla facilisi. Phasellus suscipit lacus at ullamcorper sagittis. Nunc congue sit amet tortor non ultricies. Ut congue tortor ac porttitor tincidunt. Nam facilisis nulla quis massa congue, sed mattis lorem tristique. Vestibulum porta placerat metus, vel mattis dui. Mauris pellentesque mauris eu volutpat tincidunt. Mauris commodo, felis eget ultricies laoreet, nulla eros mattis nisl, ut tempor mi sem tempor dolor. Maecenas vel felis ut nibh suscipit tempus a et nisi.</p>\r\n            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin congue dui ac mollis blandit. Nunc non consectetur mi. Curabitur et auctor nisl, ac dictum neque. Cras vitae varius enim. Quisque eleifend consequat dui. Ut nisi eros, ultricies nec erat eget, suscipit convallis tortor. Sed vel finibus ligula. Fusce facilisis risus sapien, ac ornare ipsum ultrices eu. Nullam pellentesque sem tempor ipsum pellentesque sodales. Nam sit amet cursus tortor. Duis condimentum mi at mi elementum scelerisque eget ac tortor. Nunc enim enim, vestibulum et volutpat rhoncus, scelerisque vel enim. Praesent quis est consectetur massa dictum euismod. Etiam ullamcorper efficitur lorem, eget vehicula justo venenatis euismod. Curabitur orci ex, sollicitudin at ante a, ultrices iaculis est. Quisque maximus tellus eget nisi bibendum, eu dapibus dui lobortis.</p>\r\n            <p>Sed faucibus nisl vel rhoncus commodo. Vestibulum maximus nisi eu tortor molestie, quis blandit eros sodales. Duis suscipit, nisl sit amet malesuada pharetra, lacus risus aliquet augue, eget imperdiet sem eros non risus. Pellentesque imperdiet ligula eu ante condimentum, eget eleifend elit consequat. Aliquam a ex eget mi lobortis iaculis. Curabitur ut sagittis magna. Praesent quis odio augue. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent sit amet ante id lacus gravida venenatis. Pellentesque quis odio a eros ultrices tempus non vel ex. Sed in rutrum diam. Proin vehicula, enim id elementum pharetra, purus magna tempor nisl, sed scelerisque orci lorem sit amet justo. Vestibulum eu volutpat quam. Nunc finibus rutrum iaculis. Aliquam erat volutpat. Nulla facilisi.</p>\r\n            <p>Fusce ex sapien, ultricies sollicitudin gravida vitae, ultrices ut ex. Morbi luctus tempus nisi. Maecenas at dolor ut purus auctor mattis eget in nunc. Nunc malesuada imperdiet venenatis. Duis varius purus odio, in venenatis enim laoreet id. Quisque eu turpis vestibulum, tincidunt nisi et, scelerisque nisi. Quisque pulvinar leo vitae ante feugiat vestibulum. Duis gravida vestibulum neque, a efficitur dui pulvinar ut. Vestibulum porttitor libero a mauris commodo, at sodales nisi elementum. Maecenas eleifend tristique quam, a pretium turpis posuere vitae. Maecenas quis fringilla lectus, ut mattis tellus. Praesent blandit tortor magna, ac fringilla orci bibendum a. Vivamus id auctor felis.</p>\r\n            <p>Nulla lobortis odio ut pharetra sagittis. Ut non finibus massa. Sed tempor tortor eu nibh efficitur feugiat. Proin congue ex ante, a ullamcorper erat sollicitudin sit amet. Vestibulum tempus turpis non justo elementum venenatis. Aenean pretium porta nisi in aliquam. Maecenas ac velit eget purus cursus laoreet vel eu nulla. Integer porta facilisis erat, at viverra nunc vulputate non. Sed neque ex, placerat at leo quis, scelerisque lacinia velit. Cras pharetra vitae nisi ac condimentum. Praesent rutrum dui sit amet lorem mattis sollicitudin.</p>\r\n            <p>Maecenas ut pellentesque ante, tincidunt luctus enim. Fusce vulputate justo felis, vehicula vehicula augue sodales sed. Vivamus tempor tristique turpis, ac interdum eros iaculis non. Aliquam eros purus, pulvinar vehicula odio sed, sollicitudin maximus dui. Donec consectetur est eu sem fermentum varius. Nulla facilisi. Phasellus suscipit lacus at ullamcorper sagittis. Nunc congue sit amet tortor non ultricies. Ut congue tortor ac porttitor tincidunt. Nam facilisis nulla quis massa congue, sed mattis lorem tristique. Vestibulum porta placerat metus, vel mattis dui. Mauris pellentesque mauris eu volutpat tincidunt. Mauris commodo, felis eget ultricies laoreet, nulla eros mattis nisl, ut tempor mi sem tempor dolor. Maecenas vel felis ut nibh suscipit tempus a et nisi.</p>\r\n            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin congue dui ac mollis blandit. Nunc non consectetur mi. Curabitur et auctor nisl, ac dictum neque. Cras vitae varius enim. Quisque eleifend consequat dui. Ut nisi eros, ultricies nec erat eget, suscipit convallis tortor. Sed vel finibus ligula. Fusce facilisis risus sapien, ac ornare ipsum ultrices eu. Nullam pellentesque sem tempor ipsum pellentesque sodales. Nam sit amet cursus tortor. Duis condimentum mi at mi elementum scelerisque eget ac tortor. Nunc enim enim, vestibulum et volutpat rhoncus, scelerisque vel enim. Praesent quis est consectetur massa dictum euismod. Etiam ullamcorper efficitur lorem, eget vehicula justo venenatis euismod. Curabitur orci ex, sollicitudin at ante a, ultrices iaculis est. Quisque maximus tellus eget nisi bibendum, eu dapibus dui lobortis.</p>\r\n            <p>Sed faucibus nisl vel rhoncus commodo. Vestibulum maximus nisi eu tortor molestie, quis blandit eros sodales. Duis suscipit, nisl sit amet malesuada pharetra, lacus risus aliquet augue, eget imperdiet sem eros non risus. Pellentesque imperdiet ligula eu ante condimentum, eget eleifend elit consequat. Aliquam a ex eget mi lobortis iaculis. Curabitur ut sagittis magna. Praesent quis odio augue. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent sit amet ante id lacus gravida venenatis. Pellentesque quis odio a eros ultrices tempus non vel ex. Sed in rutrum diam. Proin vehicula, enim id elementum pharetra, purus magna tempor nisl, sed scelerisque orci lorem sit amet justo. Vestibulum eu volutpat quam. Nunc finibus rutrum iaculis. Aliquam erat volutpat. Nulla facilisi.</p>\r\n            <p>Fusce ex sapien, ultricies sollicitudin gravida vitae, ultrices ut ex. Morbi luctus tempus nisi. Maecenas at dolor ut purus auctor mattis eget in nunc. Nunc malesuada imperdiet venenatis. Duis varius purus odio, in venenatis enim laoreet id. Quisque eu turpis vestibulum, tincidunt nisi et, scelerisque nisi. Quisque pulvinar leo vitae ante feugiat vestibulum. Duis gravida vestibulum neque, a efficitur dui pulvinar ut. Vestibulum porttitor libero a mauris commodo, at sodales nisi elementum. Maecenas eleifend tristique quam, a pretium turpis posuere vitae. Maecenas quis fringilla lectus, ut mattis tellus. Praesent blandit tortor magna, ac fringilla orci bibendum a. Vivamus id auctor felis.</p>\r\n            <p>Nulla lobortis odio ut pharetra sagittis. Ut non finibus massa. Sed tempor tortor eu nibh efficitur feugiat. Proin congue ex ante, a ullamcorper erat sollicitudin sit amet. Vestibulum tempus turpis non justo elementum venenatis. Aenean pretium porta nisi in aliquam. Maecenas ac velit eget purus cursus laoreet vel eu nulla. Integer porta facilisis erat, at viverra nunc vulputate non. Sed neque ex, placerat at leo quis, scelerisque lacinia velit. Cras pharetra vitae nisi ac condimentum. Praesent rutrum dui sit amet lorem mattis sollicitudin.</p>\r\n            <p>Maecenas ut pellentesque ante, tincidunt luctus enim. Fusce vulputate justo felis, vehicula vehicula augue sodales sed. Vivamus tempor tristique turpis, ac interdum eros iaculis non. Aliquam eros purus, pulvinar vehicula odio sed, sollicitudin maximus dui. Donec consectetur est eu sem fermentum varius. Nulla facilisi. Phasellus suscipit lacus at ullamcorper sagittis. Nunc congue sit amet tortor non ultricies. Ut congue tortor ac porttitor tincidunt. Nam facilisis nulla quis massa congue, sed mattis lorem tristique. Vestibulum porta placerat metus, vel mattis dui. Mauris pellentesque mauris eu volutpat tincidunt. Mauris commodo, felis eget ultricies laoreet, nulla eros mattis nisl, ut tempor mi sem tempor dolor. Maecenas vel felis ut nibh suscipit tempus a et nisi.</p>\r\n            </Layout>\r\n        );\r\n    }\r\n});\r\n\r\nreturn <LayoutExample />;\r\n"
    },
    {
        "name": "panel",
        "version": "1.0.0",
        "description": "",
        "keywords": [
            "panel",
            "block",
            "edit",
            "consult",
            "form"
        ],
        "code": "const Panel = FocusComponents.components.Panel;\r\nconst formMixin = FocusComponents.common.form.mixin;\r\n\r\nconst domain =  {\r\n    \"DO_TEXT\": {\r\n        style: \"do_text\",\r\n        type: \"text\",\r\n        component: \"PapaSinge\",\r\n        validation: [{\r\n            type: \"function\",\r\n            value: function() {\r\n                return false;\r\n            }\r\n        }]\r\n    }\r\n};\r\nFocus.definition.domain.container.setAll(domain);\r\nconst entities = {\r\n    \"contact\": {\r\n        \"firstName\": {\r\n            \"domain\": \"DO_TEXT\",\r\n            \"required\": false\r\n        }\r\n    }\r\n};\r\nFocus.definition.entity.container.setEntityConfiguration(entities);\r\n\r\nconst PanelSample1 = React.createClass({\r\n    definitionPath: 'contact',\r\n    mixins: [formMixin],\r\n    /**\r\n    * Render the component.\r\n    * @return {object} React node\r\n    */\r\n    renderContent() {\r\n        return (\r\n            <div>\r\n                <h3>Block without actions</h3>\r\n                <Panel title=\"Here is the title\">\r\n                    <br/>\r\n                    <br/>\r\n                    <p>Here is the content.</p>\r\n                    <br/>\r\n                    <br/>\r\n                </Panel>\r\n            </div>\r\n        );\r\n    }\r\n});\r\n\r\nconst PanelSample2 = React.createClass({\r\n    definitionPath: 'contact',\r\n    mixins: [formMixin],\r\n    /**\r\n    * Render the component.\r\n    * @return {object} React node\r\n    */\r\n    renderContent() {\r\n        return (\r\n            <div>\r\n                <h3>Block with actions (default)</h3>\r\n                <Panel title=\"Here is the title\" actions={this._renderActions}>\r\n                    <br/>\r\n                    <br/>\r\n                    <p>Here is the content.</p>\r\n                    <br/>\r\n                    <br/>\r\n                </Panel>\r\n            </div>\r\n        );\r\n    }\r\n});\r\n\r\nconst PanelSample3 = React.createClass({\r\n    definitionPath: 'contact',\r\n    mixins: [formMixin],\r\n    /**\r\n    * Render the component.\r\n    * @return {object} React node\r\n    */\r\n    renderContent() {\r\n        return (\r\n            <div>\r\n                <h3>Block with actions (bottom)</h3>\r\n                <Panel title=\"Here is the title\" actions={this._renderActions} actionsPosition=\"bottom\">\r\n                    <br/>\r\n                    <br/>\r\n                    <p>Here is the content.</p>\r\n                    <br/>\r\n                    <br/>\r\n                </Panel>\r\n            </div>\r\n        );\r\n    }\r\n});\r\n\r\nconst PanelSample4 = React.createClass({\r\n    definitionPath: 'contact',\r\n    mixins: [formMixin],\r\n    /**\r\n    * Render the component.\r\n    * @return {object} React node\r\n    */\r\n    renderContent() {\r\n        return (\r\n            <div>\r\n                <h3>Block with actions (both)</h3>\r\n                <Panel title=\"Here is the title\" actions={this._renderActions} actionsPosition=\"both\">\r\n                    <br/>\r\n                    <br/>\r\n                    <p>Here is the content.</p>\r\n                    <br/>\r\n                    <br/>\r\n                </Panel>\r\n            </div>\r\n        );\r\n    }\r\n});\r\n\r\nreturn (\r\n    <div>\r\n        <PanelSample1 hasLoad={false} />\r\n        <br/>\r\n        <PanelSample2 hasLoad={false} />\r\n        <br/>\r\n        <PanelSample3 hasLoad={false} />\r\n        <br/>\r\n        <PanelSample4 hasLoad={false} />\r\n    </div>\r\n);\r\n"
    },
    {
        "name": "ScrollspyContainer",
        "version": "1.0.0",
        "description": "navigation panel, used on detail with back-to-top",
        "keywords": [
            "nvaigation",
            "detail",
            "scrollable",
            "container"
        ],
        "code": "const ScrollspyContainer = FocusComponents.components.ScrollspyContainer;\r\nconst Panel = FocusComponents.components.Panel;\r\n\r\nconst headerHeigth = 100;\r\n\r\nconst headerStyles = {\r\n    backgroundColor:'#FFF',\r\n    position: 'fixed',\r\n    top: 0,\r\n    left: 0,\r\n    width: 100 + '%',\r\n    height: headerHeigth + 'px',\r\n    zIndex: 1000,\r\n    textAlign: 'center'\r\n};\r\n\r\nconst ScrollspyContainerSample = React.createClass({\r\n\r\n    getInitialState(){\r\n        return {\r\n            isConditionalBlock: false,\r\n        };\r\n    },\r\n\r\n    componentDidMount() {\r\n        setTimeout(()=>{\r\n                this.setState({isConditionalBlock: true})\r\n        }, 3 * 1000);\r\n    },\r\n    /**\r\n    * Render the component.\r\n    * @return {object} React node\r\n    */\r\n    render() {\r\n        const {isConditionalBlock} = this.state;\r\n\r\n        return (\r\n            <div>\r\n                <div style={headerStyles}><h1>header</h1></div>\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <ScrollspyContainer offset={headerHeigth + 10}>\r\n                    <Panel title=\"Sports\">\r\n                        <img alt=\"lorempixel\" src=\"http://lorempixel.com/800/600/sports\" title=\"lorempixel\" />\r\n                    </Panel>\r\n\r\n                    <Panel title=\"Animals\">\r\n                        <img alt=\"lorempixel\" src=\"http://lorempixel.com/800/600/animals\" title=\"lorempixel\" />\r\n                    </Panel>\r\n\r\n                    <Panel title=\"Business\">\r\n                        <img alt=\"lorempixel\" src=\"http://lorempixel.com/800/600/business\" title=\"lorempixel\" />\r\n                    </Panel>\r\n\r\n                    <Panel title=\"Cats\">\r\n                        <img alt=\"lorempixel\" src=\"http://lorempixel.com/800/600/cats\" title=\"lorempixel\" />\r\n                    </Panel>\r\n\r\n                    <Panel title=\"City\">\r\n                        <img alt=\"lorempixel\" src=\"http://lorempixel.com/800/600/city\" title=\"lorempixel\" />\r\n                    </Panel>\r\n\r\n                    <Panel title=\"Food\">\r\n                        <img alt=\"lorempixel\" src=\"http://lorempixel.com/800/600/food\" title=\"lorempixel\" />\r\n                    </Panel>\r\n\r\n                    {isConditionalBlock &&\r\n                        <Panel title=\"Conditionnal block\">\r\n                            <img alt=\"lorempixel\" src=\"http://lorempixel.com/800/600/food\" title=\"lorempixel\" />\r\n                            <img alt=\"lorempixel\" src=\"http://lorempixel.com/800/600/business\" title=\"lorempixel\" />\r\n                            <img alt=\"lorempixel\" src=\"http://lorempixel.com/800/600/city\" title=\"lorempixel\" />\r\n                            <img alt=\"lorempixel\" src=\"http://lorempixel.com/800/600/animals\" title=\"lorempixel\" />\r\n                            <img alt=\"lorempixel\" src=\"http://lorempixel.com/800/600/sports\" title=\"lorempixel\" />\r\n                        </Panel>\r\n                    }\r\n\r\n                    <Panel title=\"Nightlife\">\r\n                        <img alt=\"lorempixel\" src=\"http://lorempixel.com/800/600/nightlife\" title=\"lorempixel\" />\r\n                    </Panel>\r\n\r\n                    <Panel title=\"Fashion\">\r\n                        <img alt=\"lorempixel\" src=\"http://lorempixel.com/800/600/fashion\" title=\"lorempixel\" />\r\n                    </Panel>\r\n\r\n                    <Panel title=\"People\">\r\n                        <img alt=\"lorempixel\" src=\"http://lorempixel.com/800/600/people\" title=\"lorempixel\" />\r\n                    </Panel>\r\n\r\n                    <Panel title=\"Nature\">\r\n                        <img src=\"http://lorempixel.com/800/600/nature\" title=\"lorempixel\" alt=\"lorempixel\" />\r\n                    </Panel>\r\n\r\n                    <Panel title=\"Technics\">\r\n                        <img src=\"http://lorempixel.com/800/600/technics\" title=\"lorempixel\" alt=\"lorempixel\" />\r\n                    </Panel>\r\n\r\n                    <Panel title=\"Transport\">\r\n                        <img src=\"http://lorempixel.com/800/600/transport\" title=\"lorempixel\" alt=\"lorempixel\" />\r\n                    </Panel>\r\n                </ScrollspyContainer>\r\n            </div>\r\n        );\r\n    }\r\n});\r\n\r\n\r\nreturn <ScrollspyContainerSample />;\r\n"
    },
    {
        "name": "table",
        "version": "1.0.0",
        "description": "Table component, please see http://www.getmdl.io/components/index.html#tables-section",
        "keywords": [
            "table",
            "tr",
            "thead",
            "td",
            "sort",
            "dumb"
        ],
        "code": "FocusExampleInitializers();\r\n//Line behaviour\r\nconst lineBehaviour = FocusComponents.list.table.line.mixin;\r\n//Table component\r\nconst Table = FocusComponents.list.table.list.component;\r\n\r\n//Line creation (should be in a separated file on a project)\r\nconst TableLineComponent = React.createClass({\r\n    mixins: [lineBehaviour],\r\n    definitionPath: 'contact',\r\n    renderLineContent(data){\r\n        const {className} = this.props;\r\n        const cellProps = {className};\r\n        return (\r\n            <tr data-focus='table-line'>\r\n                <td {...cellProps}>{this.textFor(\"firstName\", {})}</td>\r\n                <td {...cellProps}>{this.textFor(\"lastName\", {})}</td>\r\n                <td {...cellProps}>\r\n                    {this.textFor(\"birthDate\", {})}\r\n                    {this.renderLineActions()}\r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n});\r\n//Dake data for the table.\r\nconst FAKE_DATA = [\r\n    {id: 1, firstName: 'Zeus', lastName: 'God', birthDate: Date.now()},\r\n    {id: 2, firstName: 'Ares', lastName: 'God', birthDate: Date.now()},\r\n    {id: 3, firstName: 'Athena', lastName: 'Godess', birthDate: Date.now()},\r\n    {id: 4, firstName: 'Poseidon', lastName: 'God', birthDate: Date.now()},\r\n    {id: 5, firstName: 'Hades', lastName: 'God', birthDate: Date.now()},\r\n]\r\n\r\n// As table needs many props to be able to be functional.\r\n// Props are created before and the given to the component using destructing asignement.\r\nconst tableProps = {\r\n    data: FAKE_DATA,\r\n    lineComponent: TableLineComponent,\r\n    //isSelectable: true,//Uncomment this line to have a selectable table\r\n    columns: {\r\n        firstName: {label: 'Prénom', sort:'asc'},\r\n        lastName: {label: 'Nom', sort: 'desc'},\r\n        birthDate: {label: \"date\", noSort: true}\r\n    },\r\n    onLineClick : function onLineClick(line){\r\n        //Should open a popin\r\n        alert('click sur la ligne ' + line.title);\r\n    },\r\n    sortColumn: function sortColumn(name, order){\r\n        //Should call an action which sorts the list.\r\n        alert('Order ' + order + ' on column ' + name);\r\n    },\r\n    operationList: [\r\n        {\r\n            label: \"Button1_a\",\r\n            action: function(data) {alert(data.title);},\r\n            style: {className: 'fa fa-eye', shape: 'fab'},\r\n            priority: 1\r\n        }\r\n    ],\r\n    isLoading: true,\r\n    hasMoreData: true,\r\n    isManualFetch: true\r\n};\r\n\r\n\r\nconst TableSample = React.createClass({\r\n    /**\r\n    * Render the component.\r\n    * @return {object} React node\r\n    */\r\n    render() {\r\n        return <Table {...tableProps} />;\r\n    }\r\n});\r\n\r\nreturn <TableSample />;\r\n"
    },
    {
        "name": "message",
        "version": "1.0.0",
        "description": "Message component",
        "keywords": [
            "message",
            "notification"
        ],
        "code": "const Message = FocusComponents.message.component;\r\n\r\nconst MessageSample = React.createClass({\r\n    getInitialState(){\r\n        return {isVisible: true};\r\n    },\r\n    _handleOnClick: function(){\r\n        this.setState({isVisible: false});\r\n    },\r\n    /**\r\n    * Render the component.\r\n    * @return {object} React node.\r\n    */\r\n    render() {\r\n        const messageProps = {\r\n            title: 'Alert',\r\n            type: 'error', // success, info, warning, none\r\n            content: 'An error has been encountered.',\r\n            ttl: 1,\r\n            handleOnClick: this._handleOnClick\r\n        };\r\n        const isVisible = this.state.isVisible;\r\n        return (\r\n            <div className='message-example'>\r\n                {isVisible &&\r\n                    <Message {...messageProps} />\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n});\r\n\r\nreturn <MessageSample/>;\r\n"
    },
    {
        "name": "Advanced search",
        "version": "1.0.0",
        "description": "Advanced search component.",
        "keywords": [
            "search",
            "advanced",
            "smart"
        ],
        "code": "const Title = FocusComponents.common.title.component;\r\nconst Button = FocusComponents.common.button.action.component;\r\n\r\nFocus.reference.config.set({\r\n    scopes() {\r\n        return new Promise(success => {\r\n            success([\r\n                {\r\n                    code: 'SCP1',\r\n                    label: 'Scope 1'\r\n                },\r\n                {\r\n                    code: 'SCP2',\r\n                    label: 'Scope 2'\r\n                },\r\n                {\r\n                    code: 'SCP3',\r\n                    label: 'Scope 3'\r\n                }\r\n            ]);\r\n        });\r\n    }\r\n});\r\n\r\nFocus.definition.entity.container.setEntityConfiguration({\r\n    contact: {\r\n        firstName: {\r\n            domain: 'DO_TEXT',\r\n            required: false\r\n        },\r\n        lastName: {\r\n            domain: 'DO_TEXT',\r\n            required: true\r\n        },\r\n        age: {\r\n            domain: 'DO_NUMBER',\r\n            required: false\r\n        },\r\n        email: {\r\n            domain: 'DO_EMAIL',\r\n            required: false\r\n        }\r\n    }\r\n});\r\n\r\nlet countId = 0;\r\n\r\nconst facets = {\r\n    FCT_PAYS: {\r\n        France: 5,\r\n        Germany: 8\r\n    },\r\n    FCT_STATUS: {\r\n        Open: 7,\r\n        Closed: 2,\r\n        'Status 1': 2,\r\n        'Status 2': 2,\r\n        'Status 3': 2,\r\n        'Status 4': 2,\r\n        'Status 5': 2\r\n    },\r\n    FCT_REGION: {\r\n        'Ile de France': 11,\r\n        'Nord - Pas de Calais': 6\r\n    }\r\n};\r\n\r\nconst getSearchService = (scoped) => {\r\n    return (criteria) => {\r\n        return new Promise(success => {\r\n            window.setTimeout(() => {\r\n                const groups = {\r\n                    FCT_PAYS: [\r\n                        {\r\n                            id: countId++,\r\n                            firstName: 'toto',\r\n                            lastName: 'ceci est un test'\r\n                        },\r\n                        {\r\n                            id: countId++,\r\n                            firstName: 'tata',\r\n                            lastName: 'deuxieme test'\r\n                        }\r\n                    ],\r\n                    FCT_STATUS: [\r\n                        {\r\n                            id: countId++,\r\n                            firstName: 'toto',\r\n                            lastName: 'ceci est un test'\r\n                        },\r\n                        {\r\n                            id: countId++,\r\n                            firstName: 'tata',\r\n                            lastName: 'deuxieme test'\r\n                        }\r\n                    ]\r\n                };\r\n\r\n                const data = {\r\n                    facets,\r\n                    groups,\r\n                    totalCount: 20\r\n                };\r\n                success(data);\r\n            }, 1000);\r\n        });\r\n    }\r\n};\r\n\r\nconst service = {\r\n    unscoped: getSearchService(false),\r\n    scoped: getSearchService(true)\r\n};\r\n\r\nconst Line = React.createClass({\r\n    mixins: [FocusComponents.list.selection.line.mixin],\r\n    definitionPath: 'contact',\r\n    renderLineContent(data) {\r\n        return (\r\n            <div>\r\n                {this.displayFor('firstName', {})}\r\n                {this.displayFor('lastName', {})}\r\n            </div>\r\n        );\r\n    }\r\n});\r\n\r\nconst Group = React.createClass({\r\n    mixins: [FocusComponents.common.i18n.mixin],\r\n    _getShowAllHandler(key) {\r\n        return () => {\r\n            this.props.showAllHandler(key);\r\n        };\r\n    },\r\n    render() {\r\n        return (\r\n            <div className=\"listResultContainer panel\" data-focus=\"group-result-container\">\r\n                <Title label={`${this.props.groupKey} (${this.props.count})`}/>\r\n                <p>{this.i18n('search.mostRelevant')}</p>\r\n                <div className=\"resultContainer\">\r\n                    {this.props.children}\r\n                </div>\r\n                <div data-focus='group-actions'>\r\n                    {this.props.canShowMore &&\r\n                      <Button handleOnClick={this.props.showMoreHandler} label={this.i18n('show.more')}/>\r\n                    }\r\n                    <Button handleOnClick={this._getShowAllHandler(this.props.groupKey)} label={this.i18n('show.all')}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n});\r\n\r\nconst advancedSearchProps = {\r\n    facetConfig: {\r\n        FCT_PAYS: 'text',\r\n        FCT_STATUS: 'text',\r\n        FCT_REGION: 'text'\r\n    },\r\n    orderableColumnList: [\r\n        {key: 'col1', order: 'desc', label: 'Colonne 1 desc'},\r\n        {key: 'col1', order: 'asc', label: 'Colonne 1 asc'},\r\n        {key: 'col2', order: 'desc', label: 'Colonne 2 desc'},\r\n        {key: 'col2', order: 'asc', label: 'Colonne 2 asc'}\r\n    ],\r\n    operationList: [\r\n        {\r\n            label: 'Button1_a',\r\n            action() {\r\n                alert('Button1a');\r\n            },\r\n            style: {},\r\n            priority: 1\r\n        },\r\n        {\r\n            label: 'Button1_b',\r\n            action() {\r\n                alert('Button1b');\r\n            },\r\n            style: {},\r\n            priority: 1\r\n        },\r\n        {\r\n            label: 'Button2_a',\r\n            action() {\r\n                alert('Button2a');\r\n            },\r\n            style: {},\r\n            priority: 2\r\n        },\r\n        {\r\n            label: 'Button2_b',\r\n            action() {\r\n                alert('Button2b');\r\n            },\r\n            style: {},\r\n            priority: 2\r\n        }\r\n    ],\r\n    onLineClick({id}) {\r\n        alert('click sur la ligne ' + id);\r\n    },\r\n    isSelection: true,\r\n    lineOperationList: [\r\n        {\r\n            label: 'Button1_a',\r\n            action({tile}) {\r\n                alert(title);\r\n            },\r\n            style: {},\r\n            priority: 1\r\n        },\r\n        {\r\n            label: 'Button1_b',\r\n            action({tile}) {\r\n                alert(title);\r\n            },\r\n            style: {},\r\n            priority: 1\r\n        },\r\n        {\r\n            label: 'Button2_a',\r\n            action({tile}) {\r\n                alert(title);\r\n            },\r\n            style: {},\r\n            priority: 2\r\n        },\r\n        {\r\n            label: 'Button2_b',\r\n            action({tile}) {\r\n                alert(title);\r\n            },\r\n            style: {},\r\n            priority: 2\r\n        }\r\n    ],\r\n    criteria: {\r\n        scope: 'Scope',\r\n        searchText: 'value'\r\n    },\r\n    idField: 'id',\r\n    unselectedScopeAction() {\r\n        alert('unselect scope')\r\n    },\r\n    exportAction() {\r\n        alert('export')\r\n    },\r\n    service,\r\n    lineComponentMapper: function(list) {\r\n        return Line;\r\n    },\r\n    groupComponent: Group,\r\n    groupMaxRows: 1\r\n};\r\n\r\nconst AdvancedSearch = FocusComponents.page.search.advancedSearch.component;\r\n\r\n// Mocked interaction\r\n\r\nsetTimeout(() => {\r\n    service.scoped({query: '', scope: '', facets: ''});\r\n}, 2000);\r\n\r\n\r\nreturn <AdvancedSearch {...advancedSearchProps} />;\r\n"
    },
    {
        "name": "quick-search",
        "version": "1.0.0",
        "description": "Quick search page. Puts a search bar and the corresponding results list�.",
        "keywords": [
            "search",
            "page",
            "smart"
        ],
        "code": "Focus.reference.config.set({\r\n    scopes() {\r\n        return new Promise(success => {\r\n            success([\r\n                {\r\n                    code: 'face',\r\n                    label: 'Utilisateurs'\r\n                },\r\n                {\r\n                    code: 'extension',\r\n                    label: 'Extensions'\r\n                },\r\n                {\r\n                    code: 'contact_phone',\r\n                    label: 'Contacts'\r\n                }\r\n            ]);\r\n        });\r\n    }\r\n});\r\n\r\nFocus.definition.entity.container.setEntityConfiguration({\r\n    contact: {\r\n        firstName: {\r\n            domain: 'DO_TEXT',\r\n            required: false\r\n        },\r\n        lastName: {\r\n            domain: 'DO_TEXT',\r\n            required: true\r\n        },\r\n        age: {\r\n            domain: 'DO_NUMBER',\r\n            required: false\r\n        },\r\n        email: {\r\n            domain: 'DO_EMAIL',\r\n            required: false\r\n        }\r\n    }\r\n});\r\n\r\nlet countId = 0;\r\n\r\nconst getSearchService = (scoped) => {\r\n    return (criteria) => {\r\n        return new Promise(success => {\r\n            window.setTimeout(() => {\r\n                const groups = {\r\n                    Test: [\r\n                        {\r\n                            id: countId++,\r\n                            firstName: 'toto',\r\n                            lastName: 'ceci est un test'\r\n                        },\r\n                        {\r\n                            id: countId++,\r\n                            firstName: 'tata',\r\n                            lastName: 'deuxieme test'\r\n                        }\r\n                    ],\r\n                    Autre: [\r\n                        {\r\n                            id: countId++,\r\n                            firstName: 'toto',\r\n                            lastName: 'ceci est un test'\r\n                        },\r\n                        {\r\n                            id: countId++,\r\n                            firstName: 'tata',\r\n                            lastName: 'deuxieme test'\r\n                        }\r\n                    ]\r\n                };\r\n\r\n                const list = [\r\n                    {\r\n                        id: countId++,\r\n                        firstName: 'toto',\r\n                        lastName: 'ceci est un test'\r\n                    },\r\n                    {\r\n                        id: countId++,\r\n                        firstName: 'tata',\r\n                        lastName: 'deuxieme test'\r\n                    }\r\n                ];\r\n\r\n                const payload = scoped ? list : groups;\r\n                const data = {\r\n                    facets: {},\r\n                    [scoped ? 'list' : 'groups']: payload,\r\n                    totalCount: 20\r\n                };\r\n                success(data);\r\n                // Focus.dispatcher.handleServerAction({\r\n                //     data: data, type: 'update'\r\n                // });\r\n            }, 1000);\r\n        });\r\n    }\r\n};\r\n\r\nconst service = {\r\n    unscoped: getSearchService(false),\r\n    scoped: getSearchService(true)\r\n};\r\n\r\nconst Line = React.createClass({\r\n    mixins: [FocusComponents.list.selection.line.mixin],\r\n    displayName: 'ResultLine',\r\n    definitionPath: 'contact',\r\n    renderLineContent(data) {\r\n        return (\r\n            <div>\r\n                {`${data.firstName} ${data.lastName}`}\r\n            </div>\r\n        );\r\n    }\r\n});\r\n\r\nconst Group = React.createClass({\r\n    displayName: 'ResultGroup',\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>{this.props.groupKey}</h2>\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n});\r\n\r\nconst quickSearchProps = {\r\n    onLineClick(line) {\r\n        alert('click sur la ligne ' + line.id);\r\n    },\r\n    scope: 'SCP2',\r\n    groupMaxRows: 3,\r\n    lineComponentMapper(list) {\r\n        return Line;\r\n    },\r\n    service,\r\n    groupComponent: Group\r\n};\r\n\r\nconst QuickSearchComponent = FocusComponents.page.search.quickSearch.component;\r\n\r\nreturn <QuickSearchComponent {...quickSearchProps}/>;\r\n"
    },
    {
        "name": "facet-box",
        "version": "1.0.0",
        "description": "Facet box. Displayed as a panel where the user can select facet values.",
        "keywords": [
            "facet",
            "search",
            "panel",
            "input",
            "filter",
            "dumb"
        ],
        "code": "const FacetBox = FocusComponents.search.facetBox.component;\r\n\r\nconst Demo = React.createClass({\r\n    getInitialState() {\r\n        return ({\r\n            selectedFacetList: {},\r\n            openedFacetList: {}\r\n        })\r\n    },\r\n    config: {\r\n        FCT_PAYS: 'text',\r\n        FCT_STATUS: 'text',\r\n        FCT_REGION: 'text',\r\n        FCT_ONLY_ONE: 'text'\r\n    },\r\n    facetList: {\r\n        FCT_PAYS: {\r\n            FRA: {label: 'France', count: 5},\r\n            GER: {label: 'Germany', count: 8}\r\n        },\r\n        FCT_STATUS: {\r\n            OPE: {label: 'Open', count: 7},\r\n            CLO: {label: 'Closed', count: 2},\r\n            ST1: {label: 'Status 1', count: 2},\r\n            ST2: {label: 'Status 2', count: 2},\r\n            ST3: {label: 'Status 3', count: 2},\r\n            ST4: {label: 'Status 4', count: 2},\r\n            ST5: {label: 'Status 5', count: 2},\r\n            ST6: {label: 'Status 6', count: 2},\r\n            ST7: {label: 'Status 7', count: 2},\r\n            ST8: {label: 'Status 8', count: 2},\r\n            ST9: {label: 'Status 9', count: 2}\r\n        },\r\n        FCT_REGION: {\r\n            IDF: {label: 'Ile de France', count: 11},\r\n            NPC: {label: 'Nord - Pas de Calais', count: 6}\r\n        },\r\n        FCT_ONLY_ONE: {\r\n            IDF: {label: 'Ile de France', count: 11}\r\n        }\r\n    },\r\n    dataSelectionHandler({selectedFacetList, openedFacetList}) {\r\n        this.setState({selectedFacetList, openedFacetList});\r\n    },\r\n    render() {\r\n        const {config, dataSelectionHandler, facetList} = this;\r\n        const {selectedFacetList, openedFacetList} = this.state;\r\n        return (\r\n            <FacetBox\r\n                config={config}\r\n                dataSelectionHandler={dataSelectionHandler}\r\n                facetList={facetList}\r\n                openedFacetList={openedFacetList}\r\n                selectedFacetList={selectedFacetList}\r\n                />\r\n        )\r\n    }\r\n});\r\n\r\nreturn <Demo/>;\r\n"
    },
    {
        "name": "search-bar",
        "version": "1.0.0",
        "description": "Search bar.",
        "keywords": [
            "search",
            "bar",
            "input",
            "dumb"
        ],
        "code": "//Components\r\nconst SearchBar = FocusComponents.search.searchBar.component;\r\n\r\n//stores\r\nconst store = Focus.search.builtInStore.quickSearchStore;\r\n\r\nconst action = {\r\n    updateProperties (props) {\r\n        return alert('Cette action a lancé une recherche et vous avez choisi le scope \"' + props.scope + '\".');\r\n    }\r\n}\r\n\r\n//data\r\nconst scopes = [\r\n    {\r\n        code: 'face',\r\n        label: 'Utilisateurs'\r\n    },\r\n    {\r\n        code: 'extension',\r\n        label: 'Extensions'\r\n    },\r\n    {\r\n        code: 'contact_phone',\r\n        label: 'Contacts'\r\n    }\r\n];\r\n\r\n//config\r\nFocus.reference.config.set({\r\n    scopes() {\r\n        return new Promise(success => {\r\n            success([\r\n                {\r\n                    code: 'SCP1',\r\n                    label: 'Scope 1'\r\n                },\r\n                {\r\n                    code: 'SCP2',\r\n                    label: 'Scope 2'\r\n                },\r\n                {\r\n                    code: 'SCP3',\r\n                    label: 'Scope 3'\r\n                }\r\n            ]);\r\n        });\r\n    }\r\n});\r\n\r\nFocus.reference.builtInAction(['scopes'])();\r\n\r\nconst SearchBarExample =  React.createClass({\r\n    render(){\r\n        return (\r\n            <div>\r\n                <h3>Search bar with scope</h3>\r\n                <SearchBar scopes={scopes} store={store} action={action} />\r\n\r\n                <h3>Search bar without scope</h3>\r\n                <SearchBar scopes={scopes} store={store} hasScopes={false} />\r\n            </div>\r\n        );\r\n    }\r\n});\r\n\r\nreturn <SearchBarExample/>;\r\n"
    }
]